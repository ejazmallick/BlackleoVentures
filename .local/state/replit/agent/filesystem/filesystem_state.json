{"file_contents":{"design_guidelines.md":{"content":"# Black Leo Ventures - Design Guidelines\n\n## Design Approach\n\n**Reference-Based: Premium Corporate/VC Platform**\nDrawing inspiration from leading venture platforms (Linear, Stripe, Sequoia Capital, Y Combinator) combined with professional B2B SaaS aesthetics. The design must convey trust, credibility, and sophistication while maintaining accessibility and clarity.\n\n## Core Design Principles\n\n1. **Trust Through Professionalism**: Every element reinforces credibility\n2. **Clarity Over Complexity**: Information-dense content presented with breathing room\n3. **Strategic Visual Hierarchy**: Guide users from problem → solution → action\n4. **Sophisticated Minimalism**: Premium feel without unnecessary ornamentation\n\n## Color Palette\n\n**Dark Mode Primary** (based on Black Leo Ventures brand):\n- Primary Background: 0 0% 7% (deep charcoal)\n- Secondary Background: 0 0% 12% (elevated surfaces)\n- Accent Gold/Orange: 25 90% 55% (for CTAs, highlights, trust elements)\n- Text Primary: 0 0% 98% (high contrast white)\n- Text Secondary: 0 0% 65% (muted descriptive text)\n- Border Subtle: 0 0% 20% (section dividers)\n- Success Green: 142 76% 45% (for metrics, positive data)\n\n**Light Mode**:\n- Primary Background: 0 0% 100%\n- Secondary Background: 0 0% 97%\n- Accent maintains same hue with adjusted lightness: 25 85% 50%\n- Text Primary: 0 0% 10%\n- Text Secondary: 0 0% 40%\n\n## Typography\n\n**Font Stack**:\n- Headings: Inter (700, 600) - clean, professional, excellent at large sizes\n- Body: Inter (400, 500) - optimal readability for longer content\n- Accents/Numbers: Space Grotesk (600) - for metrics, statistics\n\n**Scale**:\n- Hero H1: text-5xl md:text-6xl lg:text-7xl (font-bold)\n- Section Headlines: text-3xl md:text-4xl lg:text-5xl (font-semibold)\n- Subsection Titles: text-xl md:text-2xl (font-semibold)\n- Body Large: text-lg md:text-xl (leading-relaxed)\n- Body Standard: text-base md:text-lg (leading-relaxed)\n- Small/Caption: text-sm (font-medium)\n\n## Layout System\n\n**Spacing Units**: Use Tailwind units of 4, 6, 8, 12, 16, 20, 24, 32\n- Component padding: p-6 to p-8\n- Section padding: py-16 md:py-24 lg:py-32\n- Container max-widths: max-w-7xl for full sections, max-w-4xl for text content\n- Grid gaps: gap-6 to gap-12 depending on content density\n\n**Responsive Breakpoints**:\n- Mobile-first approach\n- md: 768px (tablet)\n- lg: 1024px (desktop)\n- xl: 1280px (large desktop)\n\n## Component Library\n\n### Hero Section\n- Full-width container with max-w-7xl inner content\n- Two-column layout: 60% content / 40% visual on desktop, stacked on mobile\n- Large hero image showing professional founder/investor meeting or sophisticated office environment\n- Trust badges row below headline (subtle, small logos with \"As seen in\" text)\n- Dual CTAs: Primary (gold/orange filled) + Secondary (outline with blur backdrop on image)\n- Floating stats cards overlaying hero image edge (e.g., \"100+ Startups Funded\", \"₹500M+ Raised\")\n\n### Pain/Problem Section\n- Dark card with subtle border glow\n- 2x2 grid on desktop, single column mobile\n- Icon (Lucide icons) + headline + description per pain point\n- Red/orange accent for icons indicating problems\n- Bridge statement in larger, italicized text below grid\n\n### Value Proposition Cards\n- 3-column grid for 5-point advantage (responsive to 2-col, then 1-col)\n- Elevated cards with hover effect (subtle lift + border glow)\n- Icon + title + 2-3 line description\n- Expertise area displayed as horizontal scrollable tag row or 3x2 grid with icons\n\n### Social Proof / Case Studies\n- Large testimonial cards with founder photo (circular, 80px)\n- Quote in large text (text-xl italic)\n- Metrics displayed prominently: funding amount (large), valuation uplift %, time taken\n- Before/after comparison for some metrics\n- Hover reveals full case study details\n- Partner/investor logos in grayscale, color on hover, 5-6 logos per row\n\n### Process Flow\n- Horizontal timeline on desktop (4 steps with connecting line)\n- Vertical timeline on mobile\n- Numbered badges (1-4) in accent color\n- Step title + description + time estimate\n- Icon representing each step\n- Subtle animation on scroll (fade in sequentially)\n\n### FAQ Section\n- Accordion pattern with smooth expand/collapse\n- Question in semibold, answer in regular weight\n- Grouped by category: \"Pricing & Fees\", \"Process & Timeline\", \"Trust & Security\"\n- Plus/minus icon toggle\n- Subtle border between items\n\n### CTA Sections\n- Full-width colored background sections (accent gold/orange or gradient)\n- Centered content with compelling headline\n- Primary button (contrasting color - dark on gold background)\n- Urgency messaging: \"Limited Spots Each Month\" with countdown or spots remaining indicator\n- Secondary supporting text below CTA\n\n### Footer\n- 4-column layout on desktop: Services, Resources, Company, Legal\n- Newsletter signup form (single-line email + button)\n- Trust badges row: GSTIN number display, \"Registered Company\", policy icons\n- Small partner logos (grayscale)\n- Social media icons (LinkedIn, Twitter, Medium) - simple, monochrome\n- Copyright and legal links at bottom\n- Background: slightly elevated from main background\n\n## Images\n\n**Hero Section**: Large, professional image (1920x1080 min)\n- Scenario: Sophisticated office setting, founder presenting to investors, or modern workspace\n- Style: High-quality photography, slightly desaturated for premium feel\n- Placement: Right side of hero on desktop, background overlay on mobile\n- Treatment: Subtle gradient overlay to ensure text readability\n\n**Case Study Sections**: Founder headshots\n- Size: 80px circular avatars\n- Style: Professional but approachable, consistent editing\n- Placement: Top-left of testimonial cards\n\n**Trust Badges**: Partner/investor logos\n- Format: SVG or high-res PNG with transparency\n- Style: Grayscale default, full color on hover\n- Placement: Below hero, in social proof section, footer\n\n## Animations & Interactions\n\n**Minimal, purposeful animations only**:\n- Fade-in on scroll for section entry (stagger for card grids)\n- Smooth hover states: subtle lift (translateY(-2px)) + shadow increase\n- CTA button: slight scale on hover (scale-105)\n- Accordion expand/collapse: smooth height transition\n- NO scroll-triggered parallax or complex animations\n\n## Accessibility & Performance\n\n- Maintain WCAG AA contrast ratios (4.5:1 minimum for text)\n- Focus states with visible outlines (ring-2 ring-offset-2)\n- Semantic HTML (nav, main, section, article, aside, footer)\n- Descriptive alt text for all images\n- Keyboard navigation for all interactive elements\n- Lazy loading for images below fold\n- Optimized image formats (WebP with fallbacks)\n\n## SEO Structure\n\n- H1 only on hero headline\n- Proper H2-H6 hierarchy throughout\n- Meta descriptions under 160 characters\n- Schema.org markup for Organization, Service, FAQPage\n- Open Graph tags for social sharing\n- Optimized page title: \"Black Leo Ventures | Startup Funding & Investor Connections\"\n\nThis design balances corporate sophistication with startup energy, ensuring trust while maintaining approachability for founders seeking funding support.","size_bytes":7071},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Black Leo Ventures - Corporate Website\n\n## Overview\nA premium, SEO-optimized corporate website for Black Leo Ventures - a startup funding and investor connection platform. The website showcases their services, value proposition, case studies, and funding process with exceptional UI/UX design.\n\n## Project Details\n- **Domain**: blackleoventures.com\n- **Type**: 100% Frontend-only Corporate Website\n- **Framework**: React + Vite + TypeScript\n- **Styling**: Tailwind CSS + shadcn/ui components\n- **Deployment**: Vercel-ready with optimized configuration\n\n## Features\n1. **Hero Section** - Compelling headline with dual CTAs, animated \"Your Growth Partner\" board with rotating messages\n2. **Pain Points Section** - Addresses common fundraising challenges with interactive cards\n3. **Value Proposition** - 5-point advantage including Pitch Deck Analysis & Improvement\n4. **Transparent Pricing** - Detailed fee structure with consulting and success fees clearly displayed\n5. **Case Studies** - Real founder testimonials with animated metrics counters\n6. **Process Flow** - 4-step funding system with timeline disclaimer\n7. **FAQ Section** - Comprehensive Q&A addressing transparency, security, and process\n8. **Final CTA** - Conversion-focused call-to-action\n9. **Professional Footer** - Complete navigation and trust badges with clickable logo\n10. **Floating WhatsApp** - Persistent WhatsApp contact button for instant communication\n11. **Color Theme Switcher** - Hidden by default with discoverable eye button and intro animation\n\n## Design System\n- **Brand Colors**: Yellow-based theme with multiple color schemes\n  - Primary (Yellow): #FFD700 / HSL 51, 100%, 50%\n  - Alternative themes: Violet (#8A2BE2), Red (#FF4500)\n  - Accents: Black (#000000), White (#FFFFFF)\n- **Color Theme Switcher**: Discoverable eye button on left edge with 5-second intro animation\n- **Typography**: Inter for body text, Space Grotesk for accents\n- **Dark Mode**: Fully supported with persistent theme toggle and localStorage sync\n- **Responsive**: Mobile-first design, optimized for all screen sizes\n- **Animations**: \n  - Scroll reveal effects for enhanced engagement\n  - Animated counters for metrics\n  - Interactive card hover effects with scale and shadow\n  - Gradient animations on hero section\n  - Rotating text animation in \"Your Growth Partner\" board\n  - Pulse, shimmer, and float effects\n  - Accessibility: Respects prefers-reduced-motion settings\n\n## SEO Optimization\n- Comprehensive meta tags for search engines\n- Open Graph tags for social media sharing\n- Semantic HTML structure\n- Optimized page titles and descriptions\n- Schema markup ready for implementation\n\n## Project Structure\n```\nclient/\n├── src/\n│   ├── pages/\n│   │   ├── home.tsx          # Main landing page with all sections\n│   │   └── not-found.tsx     # 404 page\n│   ├── components/\n│   │   ├── ui/               # shadcn components\n│   │   ├── theme-provider.tsx    # Dark/light mode provider\n│   │   ├── theme-toggle.tsx      # Theme switcher component\n│   │   ├── animated-counter.tsx  # Animated number counter\n│   │   ├── scroll-reveal.tsx     # Scroll-based reveal animations\n│   │   └── floating-whatsapp.tsx # Floating WhatsApp CTA button\n│   ├── App.tsx               # Main app router\n│   └── index.css             # Global styles + design tokens + animations\n├── index.html                # HTML with SEO meta tags\nattached_assets/\n└── backleo_1759611500843.PNG # Company logo\n```\n\n## Development\n```bash\nnpm install\nnpm run dev\n```\n\n## Build for Production\n```bash\nnpm run build\n```\n\n## Deployment to Vercel\n1. Connect your repository to Vercel\n2. Import the project\n3. Vercel will automatically detect the configuration from vercel.json\n4. Deploy with one click\n\nOr via CLI:\n```bash\nnpm install -g vercel\nvercel --prod\n```\n\n## Content Guidelines\n- No fake or placeholder information\n- All content is professional and credible\n- Real metrics and case studies (using realistic examples)\n- Trust-building elements throughout\n\n## User Preferences\n- Frontend-only implementation (no backend/API)\n- Vercel hosting optimized\n- SEO-ready with comprehensive meta tags\n- Responsive design for all devices\n- Professional, trustworthy design aesthetic\n- Fast loading and optimized performance\n\n## Recent Changes\n- 2025-10-06: Black Leo Ventures Platform Transformation\n  - **Logo Update**: Replaced company logo with new Black Leo Ventures logo (logo blackleo_1759773901852.png) across all pages\n  - **Hero Section Redesign**: \n    - Changed main headline to \"Secure one on one access to investors\"\n    - Reorganized subheading: \"From building your MVP to making you investor-ready; we prepare your startup for growth and provide direct access to vetted capital.\"\n  - **Our Expertise Section**: Redesigned with 6 comprehensive services:\n    1. Funds for Startups - Direct investor connections and fundraising support\n    2. Funds for Funds - Capital raising for investment funds\n    3. Grants & Incubation Support - Redirects to http://getgrants.in/ for government grants\n    4. Deal Origination & Structuring - Investment deal pipeline and structuring\n    5. Mergers and Acquisitions - M&A advisory and execution\n    6. Documentation - Legal and compliance documentation\n  - **AI-Powered Tools**: Added serverless Vercel API functions\n    - Pitch Practice tool with Gemini AI-powered investor simulation (gemini-2.0-flash model)\n    - Equity Calculator for dilution analysis and funding scenarios\n    - Configured GOOGLE_API_KEY secret for Gemini AI integration\n  - **Technical Updates**:\n    - Fixed Vercel serverless functions to use @google/genai package with GoogleGenAI class\n    - Implemented proper API routing with /api directory structure\n    - Added Zod validation schemas for API requests\n- 2025-10-06: Yellow color theme transformation\n  - Updated color scheme from orange to yellow-based theme (#FFD700 primary)\n  - Added alternative color themes: Violet (#8A2BE2) and Red (#FF4500)\n  - Created ColorThemeSwitcher component with discoverable eye button in bottom left\n  - Implemented 5-second intro animation showing \"Theme\" label for discoverability\n  - Added 5th service \"Pitch Deck Analysis & Improvement\" to Our 5-Point Advantage\n  - Enhanced \"Your Growth Partner\" hero box with animated rotating text messages\n  - Added timeline disclaimer to \"Our 4-Step Funding System\" (updated to use \"startup's\")\n  - Made logo clickable to redirect to home page on all pages\n  - Leadership team displays 2 directors: Nirdosh Arora and Utkarsh Chourasiya\n- 2025-10-05: Masterpiece design transformation\n  - Implemented complete dark/light mode system with ThemeProvider and persistent theme toggle\n  - Added transparent pricing section with detailed fee breakdown (consulting + success fees)\n  - Created engaging user interactions: scroll reveal animations, animated counters, interactive card effects\n  - Enhanced hero section with animated gradient backgrounds and improved visual hierarchy\n  - Added floating WhatsApp button for instant contact\n  - Implemented accessibility features: prefers-reduced-motion support\n  - Added custom CSS animations: pulse, shimmer, float, glow effects\n  - Improved overall visual design with consistent spacing and professional aesthetics\n- 2025-01-05: Final updates for Indian market optimization\n  - Replaced all currency icons with IndianRupee (₹) from lucide-react\n  - Updated phone number to +91 78370 59633 (removed IVR reference)\n  - Integrated WhatsApp links (wa.me) for all CTAs with prefilled messages\n  - Added scheduling link (https://zcal.co/blackleoventures/30min)\n  - Removed \"Conviction-Driven Pitches\" advantage card\n  - Updated footer copyright year to 2025\n  - Created comprehensive About Us page with director information (Nirdosh Arora, Utkarsh Chourasiya)\n  - Added company profile download link in navigation\n- 2024-10-04: Initial website creation with all sections\n- Implemented comprehensive SEO meta tags\n- Added Vercel deployment configuration\n- Created all sections per client requirements document\n","size_bytes":8159},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4050},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { \n  pitchPracticeRequestSchema, \n  equityCalculationRequestSchema \n} from \"@shared/schema\";\nimport { generateInvestorResponse, calculateEquityDilution } from \"./gemini\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Pitch Practice AI endpoint\n  app.post(\"/api/pitch-practice\", async (req, res) => {\n    try {\n      const validated = pitchPracticeRequestSchema.parse(req.body);\n      \n      const investorResponse = await generateInvestorResponse(\n        validated.message,\n        validated.conversationHistory\n      );\n\n      res.json({ \n        success: true, \n        response: investorResponse \n      });\n    } catch (error: any) {\n      console.error(\"Pitch practice error:\", error);\n      \n      // Differentiate between validation and server errors\n      if (error.name === 'ZodError') {\n        res.status(400).json({ \n          success: false, \n          error: \"Invalid request format\" \n        });\n      } else {\n        res.status(500).json({ \n          success: false, \n          error: error.message || \"Failed to generate investor response. Please try again.\" \n        });\n      }\n    }\n  });\n\n  // Equity Dilution Calculator endpoint\n  app.post(\"/api/equity-calculator\", async (req, res) => {\n    try {\n      const validated = equityCalculationRequestSchema.parse(req.body);\n      \n      const result = calculateEquityDilution(\n        validated.currentOwnership,\n        validated.fundraisingAmount,\n        validated.preMoneyValuation\n      );\n\n      res.json({ \n        success: true, \n        result \n      });\n    } catch (error: any) {\n      console.error(\"Equity calculation error:\", error);\n      \n      // Differentiate between validation and calculation errors\n      if (error.name === 'ZodError') {\n        res.status(400).json({ \n          success: false, \n          error: \"Please enter valid numbers for all fields\" \n        });\n      } else {\n        res.status(500).json({ \n          success: false, \n          error: error.message || \"Failed to calculate equity dilution. Please try again.\" \n        });\n      }\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":2288},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\n// Pitch Practice AI schemas\nexport const pitchPracticeMessageSchema = z.object({\n  role: z.enum(['user', 'assistant']),\n  content: z.string(),\n});\n\nexport const pitchPracticeRequestSchema = z.object({\n  message: z.string().min(1, \"Message cannot be empty\"),\n  conversationHistory: z.array(pitchPracticeMessageSchema).optional().default([]),\n});\n\nexport type PitchPracticeMessage = z.infer<typeof pitchPracticeMessageSchema>;\nexport type PitchPracticeRequest = z.infer<typeof pitchPracticeRequestSchema>;\n\n// Equity Dilution Calculator schemas\nexport const equityCalculationRequestSchema = z.object({\n  currentOwnership: z.number().min(0).max(100),\n  fundraisingAmount: z.number().min(0),\n  preMoneyValuation: z.number().min(0),\n});\n\nexport const equityCalculationResultSchema = z.object({\n  preMoneyValuation: z.number(),\n  postMoneyValuation: z.number(),\n  newInvestorOwnership: z.number(),\n  founderOwnershipAfter: z.number(),\n  fundraisingAmount: z.number(),\n  sharePrice: z.number(),\n  dilutionPercentage: z.number(),\n});\n\nexport type EquityCalculationRequest = z.infer<typeof equityCalculationRequestSchema>;\nexport type EquityCalculationResult = z.infer<typeof equityCalculationResultSchema>;\n","size_bytes":1785},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/components/theme-provider\";\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Tools from \"@/pages/tools\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/tools\" component={Tools} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider defaultTheme=\"light\" storageKey=\"blackleo-theme\">\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1028},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 100%;\n\n  --foreground: 0 0% 10%;\n\n  --border: 0 0% 89%;\n\n  --card: 0 0% 97%;\n\n  --card-foreground: 0 0% 10%;\n\n  --card-border: 0 0% 93%;\n\n  --sidebar: 0 0% 96%;\n\n  --sidebar-foreground: 0 0% 10%;\n\n  --sidebar-border: 0 0% 91%;\n\n  --sidebar-primary: 51 100% 50%;\n\n  --sidebar-primary-foreground: 0 0% 10%;\n\n  --sidebar-accent: 0 0% 92%;\n\n  --sidebar-accent-foreground: 0 0% 10%;\n\n  --sidebar-ring: 51 100% 50%;\n\n  --popover: 0 0% 95%;\n\n  --popover-foreground: 0 0% 10%;\n\n  --popover-border: 0 0% 89%;\n\n  --primary: 51 100% 50%;\n\n  --primary-foreground: 0 0% 10%;\n\n  --secondary: 0 0% 91%;\n\n  --secondary-foreground: 0 0% 10%;\n\n  --muted: 0 2% 93%;\n\n  --muted-foreground: 0 0% 40%;\n\n  --accent: 0 3% 94%;\n\n  --accent-foreground: 0 0% 10%;\n\n  --destructive: 0 84% 45%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 0 0% 75%;\n  --ring: 51 100% 50%;\n  --chart-1: 51 100% 50%;\n  --chart-2: 142 76% 45%;\n  --chart-3: 271 76% 53%;\n  --chart-4: 16 100% 50%;\n  --chart-5: 45 90% 55%;\n  \n  --violet: 271 76% 53%;\n  --violet-foreground: 0 0% 98%;\n  --red-accent: 16 100% 50%;\n  --red-accent-foreground: 0 0% 98%;\n\n  --primary-outline-color: rgba(0, 0, 0, 0.6);\n\n  --font-sans: Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: \"Space Grotesk\", Menlo, monospace;\n  --radius: .5rem;\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.05);\n  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.1);\n  --shadow-sm: 0px 1px 3px 0px hsl(0 0% 0% / 0.1), 0px 1px 2px -1px hsl(0 0% 0% / 0.1);\n  --shadow: 0px 2px 4px -1px hsl(0 0% 0% / 0.1), 0px 1px 3px 0px hsl(0 0% 0% / 0.1);\n  --shadow-md: 0px 4px 6px -1px hsl(0 0% 0% / 0.1), 0px 2px 4px -2px hsl(0 0% 0% / 0.1);\n  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.1), 0px 4px 6px -4px hsl(0 0% 0% / 0.1);\n  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.1), 0px 8px 10px -6px hsl(0 0% 0% / 0.1);\n  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.25);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 0 0% 7%;\n\n  --foreground: 0 0% 98%;\n\n  --border: 0 0% 20%;\n\n  --card: 0 0% 12%;\n\n  --card-foreground: 0 0% 98%;\n\n  --card-border: 0 0% 16%;\n\n  --sidebar: 0 0% 10%;\n\n  --sidebar-foreground: 0 0% 98%;\n\n  --sidebar-border: 0 0% 14%;\n\n  --sidebar-primary: 51 100% 55%;\n\n  --sidebar-primary-foreground: 0 0% 10%;\n\n  --sidebar-accent: 0 0% 15%;\n\n  --sidebar-accent-foreground: 0 0% 98%;\n\n  --sidebar-ring: 51 100% 55%;\n\n  --popover: 0 0% 14%;\n\n  --popover-foreground: 0 0% 98%;\n\n  --popover-border: 0 0% 18%;\n\n  --primary: 51 100% 55%;\n\n  --primary-foreground: 0 0% 10%;\n\n  --secondary: 0 0% 18%;\n\n  --secondary-foreground: 0 0% 98%;\n\n  --muted: 0 3% 16%;\n\n  --muted-foreground: 0 0% 65%;\n\n  --accent: 0 4% 17%;\n\n  --accent-foreground: 0 0% 98%;\n\n  --destructive: 0 84% 35%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 0 0% 30%;\n  --ring: 51 100% 55%;\n  --chart-1: 51 100% 65%;\n  --chart-2: 142 76% 55%;\n  --chart-3: 271 76% 63%;\n  --chart-4: 16 100% 60%;\n  --chart-5: 45 90% 65%;\n  \n  --violet: 271 76% 63%;\n  --violet-foreground: 0 0% 98%;\n  --red-accent: 16 100% 60%;\n  --red-accent-foreground: 0 0% 98%;\n\n  --primary-outline-color: rgba(255, 255, 255, 0.3);\n\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.3);\n  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.4);\n  --shadow-sm: 0px 1px 3px 0px hsl(0 0% 0% / 0.4), 0px 1px 2px -1px hsl(0 0% 0% / 0.4);\n  --shadow: 0px 2px 4px -1px hsl(0 0% 0% / 0.4), 0px 1px 3px 0px hsl(0 0% 0% / 0.4);\n  --shadow-md: 0px 4px 6px -1px hsl(0 0% 0% / 0.5), 0px 2px 4px -2px hsl(0 0% 0% / 0.5);\n  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.5), 0px 4px 6px -4px hsl(0 0% 0% / 0.5);\n  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.6), 0px 8px 10px -6px hsl(0 0% 0% / 0.6);\n  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.7);\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* Yellow text outline for better visibility */\n  .text-primary:not(.no-text-outline) {\n    text-shadow: \n      1px 1px 0 var(--primary-outline-color),\n      -1px -1px 0 var(--primary-outline-color),\n      1px -1px 0 var(--primary-outline-color),\n      -1px 1px 0 var(--primary-outline-color),\n      0px 1px 0 var(--primary-outline-color),\n      1px 0px 0 var(--primary-outline-color),\n      0px -1px 0 var(--primary-outline-color),\n      -1px 0px 0 var(--primary-outline-color);\n  }\n\n  .text-primary svg,\n  svg.text-primary {\n    filter: \n      drop-shadow(1px 1px 0 var(--primary-outline-color))\n      drop-shadow(-1px -1px 0 var(--primary-outline-color))\n      drop-shadow(1px -1px 0 var(--primary-outline-color))\n      drop-shadow(-1px 1px 0 var(--primary-outline-color));\n  }\n\n  .text-outline-strong {\n    text-shadow: \n      2px 2px 0 var(--primary-outline-color),\n      -2px -2px 0 var(--primary-outline-color),\n      2px -2px 0 var(--primary-outline-color),\n      -2px 2px 0 var(--primary-outline-color),\n      0px 2px 0 var(--primary-outline-color),\n      2px 0px 0 var(--primary-outline-color),\n      0px -2px 0 var(--primary-outline-color),\n      -2px 0px 0 var(--primary-outline-color);\n  }\n\n  .no-text-outline {\n    text-shadow: none !important;\n  }\n\n  .no-text-outline svg,\n  svg.no-text-outline {\n    filter: none !important;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n\n  /* Engaging animations */\n  @keyframes pulse-slow {\n    0%, 100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.8;\n    }\n  }\n\n  @keyframes float {\n    0%, 100% {\n      transform: translateY(0px);\n    }\n    50% {\n      transform: translateY(-10px);\n    }\n  }\n\n  @keyframes glow {\n    0%, 100% {\n      box-shadow: 0 0 20px rgba(251, 146, 60, 0.3);\n    }\n    50% {\n      box-shadow: 0 0 30px rgba(251, 146, 60, 0.5);\n    }\n  }\n\n  @keyframes shimmer {\n    0% {\n      background-position: -1000px 0;\n    }\n    100% {\n      background-position: 1000px 0;\n    }\n  }\n\n  .animate-pulse-slow {\n    animation: pulse-slow 3s ease-in-out infinite;\n  }\n\n  .animate-float {\n    animation: float 3s ease-in-out infinite;\n  }\n\n  .animate-glow {\n    animation: glow 2s ease-in-out infinite;\n  }\n\n  .animate-shimmer {\n    background: linear-gradient(\n      90deg,\n      transparent,\n      rgba(255, 255, 255, 0.1),\n      transparent\n    );\n    background-size: 200% 100%;\n    animation: shimmer 3s infinite;\n  }\n\n  /* Interactive card scale */\n  .interactive-card {\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n  }\n\n  .interactive-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  }\n\n  .dark .interactive-card:hover {\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n  }\n\n  /* Smooth reveal */\n  .reveal {\n    opacity: 0;\n    transform: translateY(30px);\n    transition: opacity 0.8s ease, transform 0.8s ease;\n  }\n\n  .reveal.revealed {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  /* Respect user's motion preferences */\n  @media (prefers-reduced-motion: reduce) {\n    *,\n    *::before,\n    *::after {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n    }\n  }\n}","size_bytes":14182},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n\ndeclare module '*.png' {\n  const value: string;\n  export default value;\n}\n\ndeclare module '*.PNG' {\n  const value: string;\n  export default value;\n}\n\ndeclare module '*.jpg' {\n  const value: string;\n  export default value;\n}\n\ndeclare module '*.jpeg' {\n  const value: string;\n  export default value;\n}\n\ndeclare module '*.svg' {\n  const value: string;\n  export default value;\n}\n\ndeclare module '*.webp' {\n  const value: string;\n  export default value;\n}\n\ndeclare module '@assets/*' {\n  const value: string;\n  export default value;\n}\n","size_bytes":569},"client/src/components/animated-counter.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\n\ninterface AnimatedCounterProps {\n  end: number;\n  duration?: number;\n  prefix?: string;\n  suffix?: string;\n  decimals?: number;\n}\n\nexport function AnimatedCounter({ \n  end, \n  duration = 2000, \n  prefix = \"\", \n  suffix = \"\",\n  decimals = 0\n}: AnimatedCounterProps) {\n  const [count, setCount] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !isVisible) {\n          setIsVisible(true);\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => observer.disconnect();\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) return;\n\n    let startTime: number;\n    let animationFrame: number;\n\n    const animate = (currentTime: number) => {\n      if (!startTime) startTime = currentTime;\n      const progress = Math.min((currentTime - startTime) / duration, 1);\n      \n      const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n      setCount(Math.floor(easeOutQuart * end));\n\n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      } else {\n        setCount(end);\n      }\n    };\n\n    animationFrame = requestAnimationFrame(animate);\n\n    return () => cancelAnimationFrame(animationFrame);\n  }, [end, duration, isVisible]);\n\n  const displayValue = decimals > 0 ? count.toFixed(decimals) : count;\n\n  return (\n    <span ref={ref}>\n      {prefix}{displayValue}{suffix}\n    </span>\n  );\n}\n","size_bytes":1640},"client/src/components/floating-whatsapp.tsx":{"content":"import { MessageCircle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport function FloatingWhatsApp() {\n  return (\n    <div className=\"fixed bottom-6 right-6 z-50\">\n      <Button\n        size=\"lg\"\n        className=\"rounded-full h-14 w-14 shadow-lg animate-pulse-slow\"\n        asChild\n        data-testid=\"button-floating-whatsapp\"\n      >\n        <a\n          href=\"https://wa.me/917837059633?text=Hi%2C%20I%27m%20interested%20in%20learning%20more%20about%20Black%20Leo%20Ventures.\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label=\"Contact us on WhatsApp\"\n        >\n          <MessageCircle className=\"h-6 w-6\" />\n        </a>\n      </Button>\n    </div>\n  );\n}\n","size_bytes":726},"client/src/components/scroll-reveal.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\n\ninterface ScrollRevealProps {\n  children: React.ReactNode;\n  className?: string;\n  delay?: number;\n}\n\nexport function ScrollReveal({ children, className = \"\", delay = 0 }: ScrollRevealProps) {\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setTimeout(() => setIsVisible(true), delay);\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => observer.disconnect();\n  }, [delay]);\n\n  return (\n    <div\n      ref={ref}\n      className={`transition-all duration-1000 ${\n        isVisible\n          ? \"opacity-100 translate-y-0\"\n          : \"opacity-0 translate-y-10\"\n      } ${className}`}\n    >\n      {children}\n    </div>\n  );\n}\n","size_bytes":946},"client/src/components/theme-provider.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"dark\" | \"light\" | \"system\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: \"system\",\n  setTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\",\n  storageKey = \"vite-ui-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  );\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n\n    root.classList.remove(\"light\", \"dark\");\n\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n        .matches\n        ? \"dark\"\n        : \"light\";\n\n      root.classList.add(systemTheme);\n      return;\n    }\n\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme);\n      setTheme(theme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n\n  return context;\n};\n","size_bytes":1605},"client/src/components/theme-toggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useTheme } from \"@/components/theme-provider\";\n\nexport function ThemeToggle() {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n      data-testid=\"button-theme-toggle\"\n      className=\"relative\"\n    >\n      <Sun className=\"h-5 w-5 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-5 w-5 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  );\n}\n","size_bytes":704},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Mail, ArrowLeft, Linkedin, Download } from \"lucide-react\";\nimport logoUrl from \"@assets/logo blackleo_1759773901852.png\";\nimport { ColorThemeSwitcher } from \"@/components/color-theme-switcher\";\n\nexport default function About() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <ColorThemeSwitcher />\n      {/* Navigation */}\n      <div className=\"border-b sticky top-0 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 z-50\">\n        <div className=\"max-w-7xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <a href=\"/\" className=\"flex items-center gap-2\" data-testid=\"link-home-logo\">\n              <img src={logoUrl} alt=\"Black Leo Ventures\" className=\"h-10 w-auto\" data-testid=\"img-logo\" />\n            </a>\n            <div className=\"flex items-center gap-4\">\n              <Button\n                variant=\"ghost\"\n                asChild\n                data-testid=\"button-back-home\"\n              >\n                <a href=\"/\">\n                  <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                  Back to Home\n                </a>\n              </Button>\n              <Button\n                asChild\n                size=\"sm\"\n                data-testid=\"button-company-profile\"\n              >\n                <a \n                  href=\"https://drive.google.com/file/d/1sU4-aKaIxF-ZB-IjXw9h4cwf8QEnB4q2/view\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                >\n                  <Download className=\"mr-2 h-4 w-4\" />\n                  Company Profile\n                </a>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Hero Section */}\n      <section className=\"py-24 md:py-32\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center space-y-6 mb-16\">\n            <h1 className=\"text-5xl md:text-6xl lg:text-7xl font-bold\" data-testid=\"text-about-headline\">\n              About <span className=\"text-primary\">Black Leo Ventures</span>\n            </h1>\n            <p className=\"text-xl md:text-2xl text-muted-foreground max-w-4xl mx-auto\">\n              Your startup growth partner - From building your MVP to making you investor-ready; we prepare your startup for growth and provide direct access to vetted capital.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission & Vision */}\n      <section className=\"py-16 bg-card\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <Card className=\"border-2 border-primary/20\">\n              <CardHeader>\n                <CardTitle className=\"text-3xl\">Our Mission</CardTitle>\n                <CardDescription className=\"text-base pt-4\">\n                  To empower Indian startups with the resources, guidance, and capital they need to transform innovative ideas into successful, scalable businesses. We bridge the gap between ambitious founders and the right investors.\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"border-2 border-primary/20\">\n              <CardHeader>\n                <CardTitle className=\"text-3xl\">Our Vision</CardTitle>\n                <CardDescription className=\"text-base pt-4\">\n                  To become India's most trusted startup funding partner, creating a thriving ecosystem where founders receive comprehensive support from MVP development to Series A funding and beyond.\n                </CardDescription>\n              </CardHeader>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Leadership Team */}\n      <section className=\"py-24 md:py-32\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center space-y-4 mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold\" data-testid=\"text-leadership-headline\">\n              Our Leadership Team\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Meet the founders driving Black Leo Ventures forward\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n            {/* Director 1 */}\n            <Card className=\"hover-elevate\" data-testid=\"card-director-1\">\n              <CardHeader className=\"text-center space-y-6\">\n                <div className=\"mx-auto w-32 h-32 rounded-full bg-gradient-to-br from-primary/20 to-primary/5 border-4 border-primary/20 flex items-center justify-center\">\n                  <span className=\"text-4xl font-bold text-primary\">NA</span>\n                </div>\n                <div className=\"space-y-2\">\n                  <CardTitle className=\"text-2xl\">Nirdosh Arora</CardTitle>\n                  <CardDescription className=\"text-base font-medium text-primary\">\n                    Director & Co-Founder\n                  </CardDescription>\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex items-center justify-center gap-2 pt-4\">\n                  <Button\n                    variant=\"outline\"\n                    asChild\n                    className=\"flex-1\"\n                    data-testid=\"button-email-nirdosh\"\n                  >\n                    <a href=\"mailto:nirdosh@blackleoventures.com\">\n                      <Mail className=\"mr-2 h-4 w-4\" />\n                      Email\n                    </a>\n                  </Button>\n                </div>\n                <div className=\"text-center text-sm text-muted-foreground\">\n                  nirdosh@blackleoventures.com\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Director 2 */}\n            <Card className=\"hover-elevate\" data-testid=\"card-director-2\">\n              <CardHeader className=\"text-center space-y-6\">\n                <div className=\"mx-auto w-32 h-32 rounded-full bg-gradient-to-br from-primary/20 to-primary/5 border-4 border-primary/20 flex items-center justify-center\">\n                  <span className=\"text-4xl font-bold text-primary\">UC</span>\n                </div>\n                <div className=\"space-y-2\">\n                  <CardTitle className=\"text-2xl\">Utkarsh Chourasiya</CardTitle>\n                  <CardDescription className=\"text-base font-medium text-primary\">\n                    Director & Co-Founder\n                  </CardDescription>\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex items-center justify-center gap-2 pt-4\">\n                  <Button\n                    variant=\"outline\"\n                    asChild\n                    className=\"flex-1\"\n                    data-testid=\"button-email-utkarsh\"\n                  >\n                    <a href=\"mailto:Utkarsh@blackleoventures.com\">\n                      <Mail className=\"mr-2 h-4 w-4\" />\n                      Email\n                    </a>\n                  </Button>\n                </div>\n                <div className=\"text-center text-sm text-muted-foreground\">\n                  Utkarsh@blackleoventures.com\n                </div>\n              </CardContent>\n            </Card>\n\n          </div>\n        </div>\n      </section>\n\n      {/* Company Information */}\n      <section className=\"py-16 bg-card\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center space-y-8\">\n            <h2 className=\"text-3xl md:text-4xl font-bold\" data-testid=\"text-company-info-headline\">\n              Company Information\n            </h2>\n            \n            <div className=\"max-w-2xl mx-auto space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Corporate Identification Number (CIN)</CardTitle>\n                  <CardDescription className=\"text-base font-mono pt-2\">\n                    U85300MP2020PTC053751\n                  </CardDescription>\n                </CardHeader>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">Contact</CardTitle>\n                  <CardDescription className=\"text-base pt-2 space-y-2\">\n                    <div>Phone: <a href=\"tel:+917837059633\" className=\"font-medium text-foreground hover:text-primary transition-colors\">+91 78370 59633</a></div>\n                    <div>Email: <a href=\"mailto:info@blackleoventures.com\" className=\"font-medium text-foreground hover:text-primary transition-colors\">info@blackleoventures.com</a></div>\n                  </CardDescription>\n                </CardHeader>\n              </Card>\n\n              <Button\n                size=\"lg\"\n                asChild\n                className=\"w-full max-w-md\"\n                data-testid=\"button-download-profile\"\n              >\n                <a \n                  href=\"https://drive.google.com/file/d/1sU4-aKaIxF-ZB-IjXw9h4cwf8QEnB4q2/view\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                >\n                  <Download className=\"mr-2 h-5 w-5\" />\n                  Download Company Profile\n                </a>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 md:py-32\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <Card className=\"border-2 border-primary/20 bg-gradient-to-br from-primary/5 to-background\">\n            <CardHeader className=\"space-y-6 p-12\">\n              <CardTitle className=\"text-3xl md:text-4xl\">\n                Ready to Take Your Startup to the Next Level?\n              </CardTitle>\n              <CardDescription className=\"text-lg\">\n                Let's discuss how Black Leo Ventures can help you secure funding and scale your business.\n              </CardDescription>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center pt-4\">\n                <Button\n                  size=\"lg\"\n                  asChild\n                  data-testid=\"button-contact-whatsapp\"\n                >\n                  <a href=\"https://wa.me/917837059633?text=Hi%2C%20I%27d%20like%20to%20learn%20more%20about%20Black%20Leo%20Ventures%20and%20how%20you%20can%20help%20my%20startup.\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Contact Us\n                  </a>\n                </Button>\n                <Button\n                  size=\"lg\"\n                  variant=\"outline\"\n                  asChild\n                  data-testid=\"button-schedule-meeting\"\n                >\n                  <a href=\"https://zcal.co/blackleoventures/30min\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Schedule a Meeting\n                  </a>\n                </Button>\n              </div>\n            </CardHeader>\n          </Card>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"py-8 bg-card border-t\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center space-y-4\">\n            <img src={logoUrl} alt=\"Black Leo Ventures\" className=\"h-10 w-auto mx-auto\" data-testid=\"img-footer-logo\" />\n            <p className=\"text-sm text-muted-foreground\" data-testid=\"text-copyright\">\n              © 2025 Black Leo Ventures. All rights reserved.\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":11705},"client/src/pages/home.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from \"@/components/ui/carousel\";\nimport {\n  AlertCircle,\n  TrendingDown,\n  FileX,\n  Clock,\n  Shield,\n  Users,\n  Target,\n  Headphones,\n  Briefcase,\n  IndianRupee,\n  Building,\n  Award,\n  FileCheck,\n  GitMerge,\n  FileText,\n  ArrowRight,\n  CheckCircle2,\n  TrendingUp,\n  Calendar,\n  ChevronRight,\n  Menu,\n  X,\n  Phone,\n  Mail,\n  MessageCircle,\n  Download,\n  Info,\n} from \"lucide-react\";\nimport logoUrl from \"@assets/logo blackleo_1759773901852.png\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { ThemeToggle } from \"@/components/theme-toggle\";\nimport { AnimatedCounter } from \"@/components/animated-counter\";\nimport { ScrollReveal } from \"@/components/scroll-reveal\";\nimport { FloatingWhatsApp } from \"@/components/floating-whatsapp\";\nimport { ColorThemeSwitcher } from \"@/components/color-theme-switcher\";\nimport { MotivationalFacts } from \"@/components/motivational-facts\";\n\nfunction AnimatedBoardText() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const messages = [\n    \"From idea validation to successful funding rounds\",\n    \"Expert pitch deck development & refinement\",\n    \"Strategic investor matchmaking & connections\",\n    \"Comprehensive financial modeling support\",\n    \"End-to-end fundraising guidance\",\n  ];\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % messages.length);\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [messages.length]);\n\n  return (\n    <div className=\"relative w-full px-4\">\n      {messages.map((message, index) => (\n        <div\n          key={index}\n          className={`absolute inset-x-0 transition-all duration-700 ${\n            index === currentIndex\n              ? \"opacity-100 translate-y-0\"\n              : \"opacity-0 translate-y-4 pointer-events-none\"\n          }`}\n          data-testid={`text-animated-message-${index}`}\n        >\n          <p className=\"text-base md:text-lg leading-relaxed\">{message}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default function Home() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n    setMobileMenuOpen(false);\n  };\n\n  useEffect(() => {\n    const organizationSchema = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"Organization\",\n      \"name\": \"Black Leo Ventures\",\n      \"description\": \"Your startup growth partner - From building your MVP to making you investor-ready; we prepare your startup for growth and provide direct access to vetted capital.\",\n      \"url\": \"https://blackleoventures.com\",\n      \"logo\": logoUrl,\n      \"contactPoint\": {\n        \"@type\": \"ContactPoint\",\n        \"contactType\": \"Business Development\",\n        \"availableLanguage\": [\"English\", \"Hindi\"]\n      },\n      \"sameAs\": [\n        \"https://www.linkedin.com/company/blackleoventures\",\n        \"https://twitter.com/blackleoventures\"\n      ]\n    };\n\n    const faqSchema = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"FAQPage\",\n      \"mainEntity\": [\n        {\n          \"@type\": \"Question\",\n          \"name\": \"What if my startup is pre-revenue?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"We work with startups at all stages, including pre-revenue. Our team specializes in helping early-stage founders articulate their vision, build compelling financial projections, and connect with investors who focus on seed and pre-seed opportunities.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"How many investor introductions will I actually get?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"Quality over quantity is our approach. Rather than sending your deck to hundreds of investors, we typically provide 5-10 highly targeted, warm introductions to investors who are actively seeking opportunities in your sector and stage.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"What's your fee structure?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"We believe in complete transparency. Our fee structure typically includes a modest upfront consulting fee for the pitch deck audit and strategy work, plus a success fee based on the funding secured. No hidden fees, ever.\"\n          }\n        }\n      ]\n    };\n\n    const serviceSchema = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"Service\",\n      \"serviceType\": \"Startup Funding & Investment Advisory\",\n      \"provider\": {\n        \"@type\": \"Organization\",\n        \"name\": \"Black Leo Ventures\"\n      },\n      \"areaServed\": \"IN\",\n      \"hasOfferCatalog\": {\n        \"@type\": \"OfferCatalog\",\n        \"name\": \"Startup Growth Services\",\n        \"itemListElement\": [\n          {\n            \"@type\": \"Offer\",\n            \"itemOffered\": {\n              \"@type\": \"Service\",\n              \"name\": \"Funds for Startups\",\n              \"description\": \"Direct access to seed, Series A, and growth-stage funding from vetted investors.\"\n            }\n          },\n          {\n            \"@type\": \"Offer\",\n            \"itemOffered\": {\n              \"@type\": \"Service\",\n              \"name\": \"Pitch Deck Development\",\n              \"description\": \"Comprehensive pitch deck audit and development services.\"\n            }\n          }\n        ]\n      }\n    };\n\n    const script1 = document.createElement('script');\n    script1.type = 'application/ld+json';\n    script1.text = JSON.stringify(organizationSchema);\n    document.head.appendChild(script1);\n\n    const script2 = document.createElement('script');\n    script2.type = 'application/ld+json';\n    script2.text = JSON.stringify(faqSchema);\n    document.head.appendChild(script2);\n\n    const script3 = document.createElement('script');\n    script3.type = 'application/ld+json';\n    script3.text = JSON.stringify(serviceSchema);\n    document.head.appendChild(script3);\n\n    return () => {\n      document.head.removeChild(script1);\n      document.head.removeChild(script2);\n      document.head.removeChild(script3);\n    };\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <FloatingWhatsApp />\n      <ColorThemeSwitcher />\n      {/* Navigation */}\n      <nav className=\"fixed top-0 left-0 right-0 z-50 border-b bg-background/80 backdrop-blur-md\">\n        <div className=\"max-w-7xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <a href=\"/\" className=\"flex items-center gap-2\" data-testid=\"link-home-logo\">\n              <img src={logoUrl} alt=\"Black Leo Ventures\" className=\"h-10 w-auto\" data-testid=\"img-logo\" />\n            </a>\n            \n            {/* Desktop Navigation */}\n            <div className=\"hidden md:flex items-center gap-6\">\n              <button\n                onClick={() => scrollToSection(\"services\")}\n                className=\"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n                data-testid=\"link-services\"\n              >\n                Services\n              </button>\n              <button\n                onClick={() => scrollToSection(\"process\")}\n                className=\"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n                data-testid=\"link-process\"\n              >\n                Process\n              </button>\n              <button\n                onClick={() => scrollToSection(\"pricing\")}\n                className=\"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n                data-testid=\"link-pricing\"\n              >\n                Pricing\n              </button>\n              <button\n                onClick={() => scrollToSection(\"case-studies\")}\n                className=\"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n                data-testid=\"link-case-studies\"\n              >\n                Case Studies\n              </button>\n              <a\n                href=\"/about\"\n                className=\"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n                data-testid=\"link-about\"\n              >\n                About Us\n              </a>\n              <a\n                href=\"https://drive.google.com/file/d/1sU4-aKaIxF-ZB-IjXw9h4cwf8QEnB4q2/view\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors flex items-center gap-1\"\n                data-testid=\"link-company-profile\"\n              >\n                <Download className=\"w-3 h-3\" />\n                Company Profile\n              </a>\n              <ThemeToggle />\n              <Button\n                size=\"sm\"\n                onClick={() => scrollToSection(\"contact\")}\n                data-testid=\"button-nav-contact\"\n              >\n                Contact Us\n              </Button>\n            </div>\n\n            {/* Mobile Navigation */}\n            <Sheet open={mobileMenuOpen} onOpenChange={setMobileMenuOpen}>\n              <SheetTrigger asChild className=\"md:hidden\">\n                <Button variant=\"ghost\" size=\"icon\" data-testid=\"button-mobile-menu\">\n                  <Menu className=\"h-6 w-6\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[300px]\">\n                <SheetHeader>\n                  <SheetTitle>Navigation</SheetTitle>\n                </SheetHeader>\n                <div className=\"flex flex-col gap-6 mt-8\">\n                  <button\n                    onClick={() => scrollToSection(\"services\")}\n                    className=\"text-lg font-medium text-muted-foreground hover:text-foreground transition-colors text-left\"\n                    data-testid=\"link-mobile-services\"\n                  >\n                    Services\n                  </button>\n                  <button\n                    onClick={() => scrollToSection(\"process\")}\n                    className=\"text-lg font-medium text-muted-foreground hover:text-foreground transition-colors text-left\"\n                    data-testid=\"link-mobile-process\"\n                  >\n                    Process\n                  </button>\n                  <button\n                    onClick={() => scrollToSection(\"pricing\")}\n                    className=\"text-lg font-medium text-muted-foreground hover:text-foreground transition-colors text-left\"\n                    data-testid=\"link-mobile-pricing\"\n                  >\n                    Pricing\n                  </button>\n                  <button\n                    onClick={() => scrollToSection(\"case-studies\")}\n                    className=\"text-lg font-medium text-muted-foreground hover:text-foreground transition-colors text-left\"\n                    data-testid=\"link-mobile-case-studies\"\n                  >\n                    Case Studies\n                  </button>\n                  <a\n                    href=\"/about\"\n                    className=\"text-lg font-medium text-muted-foreground hover:text-foreground transition-colors text-left\"\n                    data-testid=\"link-mobile-about\"\n                  >\n                    About Us\n                  </a>\n                  <a\n                    href=\"https://drive.google.com/file/d/1sU4-aKaIxF-ZB-IjXw9h4cwf8QEnB4q2/view\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"text-lg font-medium text-muted-foreground hover:text-foreground transition-colors text-left flex items-center gap-2\"\n                    data-testid=\"link-mobile-company-profile\"\n                  >\n                    <Download className=\"w-4 h-4\" />\n                    Company Profile\n                  </a>\n                  <div className=\"flex items-center justify-between mt-4 pt-4 border-t\">\n                    <span className=\"text-sm font-medium\">Theme</span>\n                    <ThemeToggle />\n                  </div>\n                  <Button\n                    className=\"w-full mt-4\"\n                    onClick={() => scrollToSection(\"contact\")}\n                    data-testid=\"button-mobile-contact\"\n                  >\n                    Contact Us\n                  </Button>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </nav>\n\n      {/* Hero Section */}\n      <section className=\"relative pt-32 pb-24 md:pt-40 md:pb-32 lg:pt-48 lg:pb-40 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-primary/10 via-primary/5 to-transparent dark:from-primary/20 dark:via-primary/10 dark:to-transparent\" />\n        <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_top_right,_var(--tw-gradient-stops))] from-primary/5 via-transparent to-transparent dark:from-primary/10\" />\n        <div className=\"max-w-7xl mx-auto px-6 relative\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div className=\"space-y-8\">\n              <div className=\"space-y-6\">\n                <h1 className=\"text-5xl md:text-6xl lg:text-7xl font-bold leading-tight tracking-tight\" data-testid=\"text-hero-headline\">\n                  Secure{\" \"}\n                  <span className=\"text-primary\">one on one access</span> to investors\n                </h1>\n                <p className=\"text-xl md:text-2xl text-muted-foreground leading-relaxed\" data-testid=\"text-hero-subheadline\">\n                  From building your MVP to making you investor-ready; we prepare your startup for growth and provide direct access to vetted capital.\n                </p>\n              </div>\n              \n              <div className=\"flex flex-col sm:flex-row flex-wrap md:flex-nowrap gap-3 md:gap-4\">\n                <Button\n                  size=\"lg\"\n                  className=\"text-lg relative overflow-hidden group w-full sm:w-auto\"\n                  asChild\n                  data-testid=\"button-pitch-deck-audit\"\n                >\n                  <a href=\"https://wa.me/917837059633?text=Hi%2C%20I%27m%20interested%20in%20a%20Pitch%20Deck%20Audit%20for%20my%20startup.%20Please%20share%20more%20details.\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span className=\"absolute inset-0 animate-pulse-slow bg-primary/20 rounded-md\"></span>\n                    <MessageCircle className=\"mr-2 h-5 w-5 relative z-10\" />\n                    <span className=\"relative z-10\">Apply for Pitch Deck Audit</span>\n                  </a>\n                </Button>\n                <Button\n                  size=\"lg\"\n                  variant=\"outline\"\n                  className=\"text-lg w-full sm:w-auto\"\n                  asChild\n                  data-testid=\"button-schedule-meeting\"\n                >\n                  <a href=\"https://zcal.co/blackleoventures/30min\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Calendar className=\"mr-2 h-5 w-5\" />\n                    Schedule a Meeting\n                  </a>\n                </Button>\n              </div>\n\n              <div className=\"flex flex-wrap items-center gap-6 pt-4\">\n                <div className=\"flex items-center gap-2\">\n                  <Badge variant=\"secondary\" className=\"text-base px-4 py-1 animate-shimmer\" data-testid=\"badge-startups-funded\">\n                    <TrendingUp className=\"w-4 h-4 mr-2\" />\n                    Trusted by Startups Nationwide\n                  </Badge>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Badge variant=\"secondary\" className=\"text-base px-4 py-1 animate-shimmer\" data-testid=\"badge-capital-raised\">\n                    <IndianRupee className=\"w-4 h-4 mr-2\" />\n                    Proven Track Record\n                  </Badge>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"relative lg:block hidden\">\n              <div className=\"aspect-square rounded-3xl bg-gradient-to-br from-primary/20 to-primary/5 border-4 border-primary/30 flex flex-col items-center justify-center p-8 animate-float shadow-xl\" data-testid=\"card-growth-partner\">\n                <div className=\"text-center space-y-6 w-full\">\n                  <div className=\"text-4xl font-bold text-primary border-b-2 border-primary/30 pb-4\" data-testid=\"text-board-title\">\n                    Your Growth Partner\n                  </div>\n                  <div className=\"space-y-3 text-base text-foreground font-medium overflow-hidden min-h-[200px]\">\n                    <AnimatedBoardText />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Indian Startup Facts Slider */}\n      <section className=\"py-16 md:py-20 bg-gradient-to-r from-primary/5 via-primary/10 to-primary/5\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">\n              India's Startup Ecosystem: Fast Facts\n            </h2>\n            <p className=\"text-lg text-muted-foreground\">\n              Why India is the perfect launchpad for your startup\n            </p>\n          </div>\n          \n          <Carousel\n            opts={{\n              align: \"start\",\n              loop: true,\n            }}\n            className=\"w-full max-w-6xl mx-auto\"\n          >\n            <CarouselContent className=\"-ml-4\">\n              <CarouselItem className=\"pl-4 md:basis-1/2 lg:basis-1/3\">\n                <Card className=\"border-2 border-primary/20 h-full\">\n                  <CardHeader className=\"text-center space-y-4\">\n                    <div className=\"text-5xl font-bold text-primary\">3rd</div>\n                    <CardTitle className=\"text-xl\">Largest Startup Ecosystem</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      India ranks 3rd globally with 100,000+ startups, right after the US and China\n                    </CardDescription>\n                  </CardHeader>\n                </Card>\n              </CarouselItem>\n\n              <CarouselItem className=\"pl-4 md:basis-1/2 lg:basis-1/3\">\n                <Card className=\"border-2 border-primary/20 h-full\">\n                  <CardHeader className=\"text-center space-y-4\">\n                    <div className=\"text-5xl font-bold text-primary\">110+</div>\n                    <CardTitle className=\"text-xl\">Unicorn Startups</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      India has created 110+ unicorns valued at over $1 billion each\n                    </CardDescription>\n                  </CardHeader>\n                </Card>\n              </CarouselItem>\n\n              <CarouselItem className=\"pl-4 md:basis-1/2 lg:basis-1/3\">\n                <Card className=\"border-2 border-primary/20 h-full\">\n                  <CardHeader className=\"text-center space-y-4\">\n                    <div className=\"text-5xl font-bold text-primary\">$25B+</div>\n                    <CardTitle className=\"text-xl\">Annual Funding</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      Indian startups raised over $25 billion in funding in recent years\n                    </CardDescription>\n                  </CardHeader>\n                </Card>\n              </CarouselItem>\n\n              <CarouselItem className=\"pl-4 md:basis-1/2 lg:basis-1/3\">\n                <Card className=\"border-2 border-primary/20 h-full\">\n                  <CardHeader className=\"text-center space-y-4\">\n                    <div className=\"text-5xl font-bold text-primary\">1.4B</div>\n                    <CardTitle className=\"text-xl\">Market Opportunity</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      Access to India's 1.4 billion population - the world's largest consumer market\n                    </CardDescription>\n                  </CardHeader>\n                </Card>\n              </CarouselItem>\n\n              <CarouselItem className=\"pl-4 md:basis-1/2 lg:basis-1/3\">\n                <Card className=\"border-2 border-primary/20 h-full\">\n                  <CardHeader className=\"text-center space-y-4\">\n                    <div className=\"text-5xl font-bold text-primary\">850M+</div>\n                    <CardTitle className=\"text-xl\">Internet Users</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      India has 850+ million internet users, creating massive digital opportunities\n                    </CardDescription>\n                  </CardHeader>\n                </Card>\n              </CarouselItem>\n\n              <CarouselItem className=\"pl-4 md:basis-1/2 lg:basis-1/3\">\n                <Card className=\"border-2 border-primary/20 h-full\">\n                  <CardHeader className=\"text-center space-y-4\">\n                    <div className=\"text-5xl font-bold text-primary\">50+</div>\n                    <CardTitle className=\"text-xl\">Government Schemes</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      Startup India and other initiatives provide grants, tax benefits, and support\n                    </CardDescription>\n                  </CardHeader>\n                </Card>\n              </CarouselItem>\n            </CarouselContent>\n            <CarouselPrevious className=\"hidden md:flex\" />\n            <CarouselNext className=\"hidden md:flex\" />\n          </Carousel>\n        </div>\n      </section>\n\n      {/* Pain Points Section */}\n      <section className=\"py-24 md:py-32 bg-card\" id=\"pain-points\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <ScrollReveal>\n            <div className=\"text-center space-y-4 mb-16\">\n              <h2 className=\"text-4xl md:text-5xl font-bold\" data-testid=\"text-pain-headline\">\n                Why Most Fundraising Efforts Yield No Results\n              </h2>\n              <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n                Understanding the common pitfalls that prevent startups from securing funding\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-6 mb-12\">\n            <Card className=\"interactive-card border-destructive/20\" data-testid=\"card-pain-1\">\n              <CardHeader>\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"p-3 rounded-lg bg-destructive/10 text-destructive\">\n                    <AlertCircle className=\"h-6 w-6\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-2xl mb-2\">Pitch Lacks Conviction & Structure</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      Investors see hundreds of pitches. Without a compelling story and clear structure, your startup gets lost in the noise.\n                    </CardDescription>\n                  </div>\n                </div>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"interactive-card border-destructive/20\" data-testid=\"card-pain-2\">\n              <CardHeader>\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"p-3 rounded-lg bg-destructive/10 text-destructive\">\n                    <TrendingDown className=\"h-6 w-6\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-2xl mb-2\">Misaligned Valuation & Unrealistic Financials</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      Overvaluation or poorly structured financial projections signal inexperience and kill investor confidence instantly.\n                    </CardDescription>\n                  </div>\n                </div>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"interactive-card border-destructive/20\" data-testid=\"card-pain-3\">\n              <CardHeader>\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"p-3 rounded-lg bg-destructive/10 text-destructive\">\n                    <FileX className=\"h-6 w-6\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-2xl mb-2\">Regulatory & Compliance Paperwork Stalls Progress</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      Complex documentation requirements and compliance issues create months of delays, draining momentum and resources.\n                    </CardDescription>\n                  </div>\n                </div>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"interactive-card border-destructive/20\" data-testid=\"card-pain-4\">\n              <CardHeader>\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"p-3 rounded-lg bg-destructive/10 text-destructive\">\n                    <Clock className=\"h-6 w-6\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-2xl mb-2\">Months Chasing Leads, Not Closing Deals</CardTitle>\n                    <CardDescription className=\"text-base\">\n                      Without the right network, founders waste time pursuing dead-end leads instead of connecting with serious investors.\n                    </CardDescription>\n                  </div>\n                </div>\n              </CardHeader>\n            </Card>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-2xl md:text-3xl font-semibold italic text-primary\" data-testid=\"text-bridge-statement\">\n              \"Focus on the few, not the many.\"\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Value Proposition Section */}\n      <section className=\"py-24 md:py-32\" id=\"services\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center space-y-4 mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold\" data-testid=\"text-value-headline\">\n              Our 5-Point Advantage\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Connecting you with the right investors through our proven approach\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16\">\n            <Card className=\"hover-elevate\" data-testid=\"card-advantage-1\">\n              <CardHeader>\n                <div className=\"p-3 rounded-lg bg-primary/10 text-primary w-fit mb-4\">\n                  <Shield className=\"h-6 w-6\" />\n                </div>\n                <CardTitle className=\"text-xl mb-2\">No Hidden Fees</CardTitle>\n                <CardDescription className=\"text-base\">\n                  Complete transparency in pricing. What you see is what you pay - no surprises, no hidden costs.\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate\" data-testid=\"card-advantage-2\">\n              <CardHeader>\n                <div className=\"p-3 rounded-lg bg-primary/10 text-primary w-fit mb-4\">\n                  <Users className=\"h-6 w-6\" />\n                </div>\n                <CardTitle className=\"text-xl mb-2\">Proprietary Matchmaking</CardTitle>\n                <CardDescription className=\"text-base\">\n                  Our algorithm matches you with investors who align with your industry, stage, and vision.\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate\" data-testid=\"card-advantage-3\">\n              <CardHeader>\n                <div className=\"p-3 rounded-lg bg-primary/10 text-primary w-fit mb-4\">\n                  <FileText className=\"h-6 w-6\" />\n                </div>\n                <CardTitle className=\"text-xl mb-2\">Pitch Deck Analysis & Improvement</CardTitle>\n                <CardDescription className=\"text-base\">\n                  Expert analysis and refinement of your pitch deck to maximize impact and investor engagement.\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate\" data-testid=\"card-advantage-4\">\n              <CardHeader>\n                <div className=\"p-3 rounded-lg bg-primary/10 text-primary w-fit mb-4\">\n                  <Target className=\"h-6 w-6\" />\n                </div>\n                <CardTitle className=\"text-xl mb-2\">Hands-On Founder Support</CardTitle>\n                <CardDescription className=\"text-base\">\n                  Comprehensive support covering deck design, financial modeling, narrative crafting, and MVP development.\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate\" data-testid=\"card-advantage-5\">\n              <CardHeader>\n                <div className=\"p-3 rounded-lg bg-primary/10 text-primary w-fit mb-4\">\n                  <Headphones className=\"h-6 w-6\" />\n                </div>\n                <CardTitle className=\"text-xl mb-2\">360° Ecosystem Support</CardTitle>\n                <CardDescription className=\"text-base\">\n                  Beyond funding - access to tech development, marketing strategy, and operational excellence.\n                </CardDescription>\n              </CardHeader>\n            </Card>\n          </div>\n\n          <div className=\"space-y-12\">\n            <div className=\"text-center space-y-4\">\n              <h3 className=\"text-4xl md:text-5xl font-bold\" data-testid=\"text-expertise-headline\">\n                Our Expertise\n              </h3>\n              <p className=\"text-xl md:text-2xl text-muted-foreground max-w-2xl mx-auto\">\n                Connecting you with the right investors.\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <Card className=\"hover-elevate transition-all duration-300\" data-testid=\"card-expertise-1\">\n                <CardHeader className=\"text-center space-y-4 p-8\">\n                  <div className=\"mx-auto p-5 rounded-2xl bg-primary/10 text-primary w-fit\">\n                    <IndianRupee className=\"h-10 w-10\" />\n                  </div>\n                  <CardTitle className=\"text-2xl font-bold\">Funds for Startups</CardTitle>\n                  <CardDescription className=\"text-base leading-relaxed\">\n                    Direct access to seed, Series A, and growth-stage funding from vetted investors.\n                  </CardDescription>\n                </CardHeader>\n              </Card>\n\n              <Card className=\"hover-elevate transition-all duration-300\" data-testid=\"card-expertise-2\">\n                <CardHeader className=\"text-center space-y-4 p-8\">\n                  <div className=\"mx-auto p-5 rounded-2xl bg-primary/10 text-primary w-fit\">\n                    <Briefcase className=\"h-10 w-10\" />\n                  </div>\n                  <CardTitle className=\"text-2xl font-bold\">Funds for Funds</CardTitle>\n                  <CardDescription className=\"text-base leading-relaxed\">\n                    Supporting fund managers with LP connections and fund structuring expertise.\n                  </CardDescription>\n                </CardHeader>\n              </Card>\n\n              <a href=\"http://getgrants.in/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"block\" data-testid=\"link-expertise-grants\">\n                <Card className=\"hover-elevate active-elevate-2 transition-all duration-300 h-full cursor-pointer\" data-testid=\"card-expertise-3\">\n                  <CardHeader className=\"text-center space-y-4 p-8\">\n                    <div className=\"mx-auto p-5 rounded-2xl bg-primary/10 text-primary w-fit\">\n                      <Award className=\"h-10 w-10\" />\n                    </div>\n                    <CardTitle className=\"text-2xl font-bold\">Grants & Incubation Support</CardTitle>\n                    <CardDescription className=\"text-base leading-relaxed\">\n                      Navigate government grants, incubator programs, and non-dilutive funding opportunities.\n                    </CardDescription>\n                  </CardHeader>\n                </Card>\n              </a>\n\n              <Card className=\"hover-elevate transition-all duration-300\" data-testid=\"card-expertise-4\">\n                <CardHeader className=\"text-center space-y-4 p-8\">\n                  <div className=\"mx-auto p-5 rounded-2xl bg-primary/10 text-primary w-fit\">\n                    <FileCheck className=\"h-10 w-10\" />\n                  </div>\n                  <CardTitle className=\"text-2xl font-bold\">Deal Origination & Structuring</CardTitle>\n                  <CardDescription className=\"text-base leading-relaxed\">\n                    End-to-end deal structuring, term sheet negotiation, and transaction execution.\n                  </CardDescription>\n                </CardHeader>\n              </Card>\n\n              <Card className=\"hover-elevate transition-all duration-300\" data-testid=\"card-expertise-5\">\n                <CardHeader className=\"text-center space-y-4 p-8\">\n                  <div className=\"mx-auto p-5 rounded-2xl bg-primary/10 text-primary w-fit\">\n                    <GitMerge className=\"h-10 w-10\" />\n                  </div>\n                  <CardTitle className=\"text-2xl font-bold\">Mergers and Acquisitions</CardTitle>\n                  <CardDescription className=\"text-base leading-relaxed\">\n                    Strategic mergers and acquisitions guidance for growth and exit opportunities.\n                  </CardDescription>\n                </CardHeader>\n              </Card>\n\n              <Card className=\"hover-elevate transition-all duration-300\" data-testid=\"card-expertise-6\">\n                <CardHeader className=\"text-center space-y-4 p-8\">\n                  <div className=\"mx-auto p-5 rounded-2xl bg-primary/10 text-primary w-fit\">\n                    <FileText className=\"h-10 w-10\" />\n                  </div>\n                  <CardTitle className=\"text-2xl font-bold\">Documentation</CardTitle>\n                  <CardDescription className=\"text-base leading-relaxed\">\n                    Comprehensive legal and compliance documentation support for seamless deals.\n                  </CardDescription>\n                </CardHeader>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Indian Startup Success Stories */}\n      <section className=\"py-24 md:py-32 bg-card\" id=\"case-studies\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center space-y-4 mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold\" data-testid=\"text-casestudy-headline\">\n              Indian Startup Success Stories\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Real examples of how Indian startups transformed their vision into billion-dollar success\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <Card className=\"hover-elevate group\" data-testid=\"card-casestudy-1\">\n              <CardHeader>\n                <div className=\"mb-4\">\n                  <Badge className=\"mb-3\">E-commerce</Badge>\n                  <CardTitle className=\"text-2xl mb-2\">Zepto: 10-Minute Delivery</CardTitle>\n                </div>\n                <CardDescription className=\"text-base leading-relaxed space-y-3\">\n                  <p className=\"font-semibold text-foreground\">Founded: 2021 | Valuation: $3.6B</p>\n                  <p>Two 19-year-old Stanford dropouts built India's fastest-growing quick commerce platform. Raised over $1.4 billion from top-tier investors including Y Combinator, Nexus Venture Partners, and Glade Brook Capital.</p>\n                  <div className=\"pt-3 border-t\">\n                    <p className=\"text-sm font-semibold text-primary\">Key Success Factor: Solved hyperlocal delivery with tech-driven dark stores</p>\n                  </div>\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate group\" data-testid=\"card-casestudy-2\">\n              <CardHeader>\n                <div className=\"mb-4\">\n                  <Badge className=\"mb-3\">FinTech</Badge>\n                  <CardTitle className=\"text-2xl mb-2\">CRED: Premium Credit Card Platform</CardTitle>\n                </div>\n                <CardDescription className=\"text-base leading-relaxed space-y-3\">\n                  <p className=\"font-semibold text-foreground\">Founded: 2018 | Valuation: $6.4B</p>\n                  <p>Kunal Shah's second unicorn created a members-only club for creditworthy Indians. Raised funding from Sequoia Capital, Ribbit Capital, and Tiger Global with innovative reward mechanisms.</p>\n                  <div className=\"pt-3 border-t\">\n                    <p className=\"text-sm font-semibold text-primary\">Key Success Factor: Gamified credit card payments with exclusive rewards</p>\n                  </div>\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate group\" data-testid=\"card-casestudy-3\">\n              <CardHeader>\n                <div className=\"mb-4\">\n                  <Badge className=\"mb-3\">EdTech</Badge>\n                  <CardTitle className=\"text-2xl mb-2\">Physics Wallah: Affordable Education</CardTitle>\n                </div>\n                <CardDescription className=\"text-base leading-relaxed space-y-3\">\n                  <p className=\"font-semibold text-foreground\">Founded: 2020 | Valuation: $2.8B</p>\n                  <p>Started as YouTube channel, Alakh Pandey built India's most affordable ed-tech platform. Achieved unicorn status with backing from Westbridge Capital and GSV Ventures, serving 10M+ students.</p>\n                  <div className=\"pt-3 border-t\">\n                    <p className=\"text-sm font-semibold text-primary\">Key Success Factor: Quality education at 1/10th the cost of competitors</p>\n                  </div>\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate group\" data-testid=\"card-casestudy-4\">\n              <CardHeader>\n                <div className=\"mb-4\">\n                  <Badge className=\"mb-3\">SaaS</Badge>\n                  <CardTitle className=\"text-2xl mb-2\">Postman: API Development Platform</CardTitle>\n                </div>\n                <CardDescription className=\"text-base leading-relaxed space-y-3\">\n                  <p className=\"font-semibold text-foreground\">Founded: 2014 | Valuation: $5.6B</p>\n                  <p>Abhinav Asthana built the world's leading API platform from Bengaluru. Now used by 25M+ developers globally with funding from Insight Partners, Nexus Venture Partners, and CRV.</p>\n                  <div className=\"pt-3 border-t\">\n                    <p className=\"text-sm font-semibold text-primary\">Key Success Factor: Solved global API development pain point</p>\n                  </div>\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate group\" data-testid=\"card-casestudy-5\">\n              <CardHeader>\n                <div className=\"mb-4\">\n                  <Badge className=\"mb-3\">HealthTech</Badge>\n                  <CardTitle className=\"text-2xl mb-2\">PharmEasy: Online Pharmacy Leader</CardTitle>\n                </div>\n                <CardDescription className=\"text-base leading-relaxed space-y-3\">\n                  <p className=\"font-semibold text-foreground\">Founded: 2015 | Valuation: $5.6B</p>\n                  <p>Dharmil Sheth and Dhaval Shah revolutionized medicine delivery in India. Raised funding from TPG, Prosus Ventures, and Temasek, serving 100+ cities with 90M+ deliveries.</p>\n                  <div className=\"pt-3 border-t\">\n                    <p className=\"text-sm font-semibold text-primary\">Key Success Factor: Made healthcare accessible and affordable pan-India</p>\n                  </div>\n                </CardDescription>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate group\" data-testid=\"card-casestudy-6\">\n              <CardHeader>\n                <div className=\"mb-4\">\n                  <Badge className=\"mb-3\">Logistics</Badge>\n                  <CardTitle className=\"text-2xl mb-2\">Delhivery: Supply Chain Giant</CardTitle>\n                </div>\n                <CardDescription className=\"text-base leading-relaxed space-y-3\">\n                  <p className=\"font-semibold text-foreground\">Founded: 2011 | Market Cap: $5B+</p>\n                  <p>Sahil Barua built India's largest logistics network from scratch. Successfully IPO'd with backing from SoftBank, Tiger Global, and Carlyle Group, handling 2B+ shipments annually.</p>\n                  <div className=\"pt-3 border-t\">\n                    <p className=\"text-sm font-semibold text-primary\">Key Success Factor: Built tech-first logistics infrastructure for e-commerce boom</p>\n                  </div>\n                </CardDescription>\n              </CardHeader>\n            </Card>\n          </div>\n\n          <div className=\"mt-16 text-center\">\n            <Card className=\"bg-primary/5 border-primary/20\">\n              <CardHeader>\n                <CardTitle className=\"text-2xl md:text-3xl mb-4\">\n                  Your Startup Could Be Next\n                </CardTitle>\n                <CardDescription className=\"text-lg\">\n                  These founders started where you are today. With the right strategy, pitch, and investor connections, your startup can achieve similar success. Let Black Leo Ventures guide your fundraising journey.\n                </CardDescription>\n              </CardHeader>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-24 md:py-32\" id=\"process\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center space-y-4 mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold\" data-testid=\"text-process-headline\">\n              Our 4-Step Funding System\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              A proven, systematic approach to securing the right funding for your startup\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <Card className=\"hover-elevate relative\" data-testid=\"card-step-1\">\n              <CardHeader className=\"text-center\">\n                <div className=\"mx-auto mb-4\">\n                  <div className=\"h-16 w-16 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-2xl font-bold mx-auto\">\n                    1\n                  </div>\n                </div>\n                <CardTitle className=\"text-2xl mb-4\">Apply & Audit</CardTitle>\n                <CardDescription className=\"text-base\">\n                  We assess your pitch deck, financial metrics, and overall fundraising readiness with a comprehensive audit.\n                </CardDescription>\n                <div className=\"mt-6 pt-6 border-t\">\n                  <div className=\"flex items-center justify-center gap-2 text-sm text-muted-foreground\">\n                    <Calendar className=\"h-4 w-4\" />\n                    <span data-testid=\"text-duration-1\">7 days</span>\n                  </div>\n                </div>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate relative\" data-testid=\"card-step-2\">\n              <CardHeader className=\"text-center\">\n                <div className=\"mx-auto mb-4\">\n                  <div className=\"h-16 w-16 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-2xl font-bold mx-auto\">\n                    2\n                  </div>\n                </div>\n                <CardTitle className=\"text-2xl mb-4\">Strategize & Build</CardTitle>\n                <CardDescription className=\"text-base\">\n                  We build your pitch deck, financial model, and compelling founder story that resonates with investors.\n                </CardDescription>\n                <div className=\"mt-6 pt-6 border-t\">\n                  <div className=\"flex items-center justify-center gap-2 text-sm text-muted-foreground\">\n                    <Calendar className=\"h-4 w-4\" />\n                    <span data-testid=\"text-duration-2\">14 days</span>\n                  </div>\n                </div>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate relative\" data-testid=\"card-step-3\">\n              <CardHeader className=\"text-center\">\n                <div className=\"mx-auto mb-4\">\n                  <div className=\"h-16 w-16 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-2xl font-bold mx-auto\">\n                    3\n                  </div>\n                </div>\n                <CardTitle className=\"text-2xl mb-4\">Match & Connect</CardTitle>\n                <CardDescription className=\"text-base\">\n                  We match you with the right investors, send warm introductions, and prepare you for winning pitches.\n                </CardDescription>\n                <div className=\"mt-6 pt-6 border-t\">\n                  <div className=\"flex items-center justify-center gap-2 text-sm text-muted-foreground\">\n                    <Calendar className=\"h-4 w-4\" />\n                    <span data-testid=\"text-duration-3\">21 days</span>\n                  </div>\n                </div>\n              </CardHeader>\n            </Card>\n\n            <Card className=\"hover-elevate relative\" data-testid=\"card-step-4\">\n              <CardHeader className=\"text-center\">\n                <div className=\"mx-auto mb-4\">\n                  <div className=\"h-16 w-16 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-2xl font-bold mx-auto\">\n                    4\n                  </div>\n                </div>\n                <CardTitle className=\"text-2xl mb-4\">Close & Support</CardTitle>\n                <CardDescription className=\"text-base\">\n                  We negotiate terms, support due diligence, and ensure successful fund disbursal and ongoing growth.\n                </CardDescription>\n                <div className=\"mt-6 pt-6 border-t\">\n                  <div className=\"flex items-center justify-center gap-2 text-sm text-muted-foreground\">\n                    <Calendar className=\"h-4 w-4\" />\n                    <span data-testid=\"text-duration-4\">30 days</span>\n                  </div>\n                </div>\n              </CardHeader>\n            </Card>\n          </div>\n          \n          <div className=\"mt-8 text-center\">\n            <p className=\"text-sm text-muted-foreground italic\" data-testid=\"text-timeline-disclaimer\">\n              * Timeline is approximate and may vary based on individual startup's requirements. Not guaranteed.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Transparent Pricing Section */}\n      <section className=\"py-24 md:py-32 bg-gradient-to-b from-background to-card\" id=\"pricing\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <ScrollReveal>\n            <div className=\"text-center space-y-4 mb-16\">\n              <Badge variant=\"outline\" className=\"text-sm px-4 py-1 mb-4\">\n                <Shield className=\"w-4 h-4 mr-2\" />\n                Complete Transparency\n              </Badge>\n              <h2 className=\"text-4xl md:text-5xl font-bold\" data-testid=\"text-pricing-headline\">\n                Simple, Transparent Pricing\n              </h2>\n              <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n                No hidden fees, no surprises. We believe in complete transparency with our pricing structure.\n              </p>\n            </div>\n          </ScrollReveal>\n\n          <div className=\"grid md:grid-cols-2 gap-8 max-w-5xl mx-auto mb-12\">\n            <Card className=\"relative overflow-hidden border-2 interactive-card\" data-testid=\"card-consulting-fee\">\n              <div className=\"absolute top-0 right-0 w-32 h-32 bg-primary/10 rounded-full blur-3xl\" />\n              <CardHeader>\n                <CardTitle className=\"text-2xl flex items-center gap-2\">\n                  <FileCheck className=\"w-6 h-6 text-primary\" />\n                  Consulting Fee\n                </CardTitle>\n                <CardDescription className=\"text-base mt-2\">\n                  One-time upfront fee for comprehensive services\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-baseline gap-2\">\n                    <span className=\"text-4xl font-bold text-primary\">Modest</span>\n                    <span className=\"text-muted-foreground\">upfront fee</span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Covers pitch deck audit, strategy development, financial modeling, and investor preparation\n                  </p>\n                </div>\n                <div className=\"pt-4 border-t space-y-2\">\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-primary flex-shrink-0\" />\n                    <span>Comprehensive pitch deck audit & refinement</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-primary flex-shrink-0\" />\n                    <span>Financial model development</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-primary flex-shrink-0\" />\n                    <span>Investor matchmaking strategy</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-primary flex-shrink-0\" />\n                    <span>Regulatory & compliance guidance</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"relative overflow-hidden border-2 border-primary/20 interactive-card\" data-testid=\"card-success-fee\">\n              <div className=\"absolute top-0 right-0 w-32 h-32 bg-primary/20 rounded-full blur-3xl\" />\n              <CardHeader>\n                <CardTitle className=\"text-2xl flex items-center gap-2\">\n                  <TrendingUp className=\"w-6 h-6 text-primary\" />\n                  Success Fee\n                </CardTitle>\n                <CardDescription className=\"text-base mt-2\">\n                  Performance-based fee upon successful funding\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-baseline gap-2\">\n                    <span className=\"text-4xl font-bold text-primary\">% Based</span>\n                    <span className=\"text-muted-foreground\">on funding secured</span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">\n                    We only succeed when you succeed. Our success fee aligns our interests with yours\n                  </p>\n                </div>\n                <div className=\"pt-4 border-t space-y-2\">\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-primary flex-shrink-0\" />\n                    <span>Only charged on successful funding</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-primary flex-shrink-0\" />\n                    <span>Competitive industry-standard rates</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-primary flex-shrink-0\" />\n                    <span>Clear terms agreed upfront</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <CheckCircle2 className=\"w-4 h-4 text-primary flex-shrink-0\" />\n                    <span>No hidden charges or surprises</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card className=\"max-w-4xl mx-auto border-2 border-primary/10 bg-primary/5\" data-testid=\"card-guarantee\">\n            <CardHeader>\n              <CardTitle className=\"text-2xl text-center flex items-center justify-center gap-2\">\n                <Shield className=\"w-6 h-6 text-primary\" />\n                Our Commitment to Transparency\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid md:grid-cols-3 gap-6 text-center\">\n                <div className=\"space-y-2\">\n                  <div className=\"text-3xl font-bold text-primary\">\n                    <AnimatedCounter end={0} prefix=\"₹\" />\n                  </div>\n                  <p className=\"text-sm font-medium\">Hidden Fees</p>\n                  <p className=\"text-xs text-muted-foreground\">Everything is disclosed upfront</p>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"text-3xl font-bold text-primary\">\n                    <AnimatedCounter end={100} suffix=\"%\" />\n                  </div>\n                  <p className=\"text-sm font-medium\">Clear Documentation</p>\n                  <p className=\"text-xs text-muted-foreground\">All terms in plain language</p>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"text-3xl font-bold text-primary\">\n                    <AnimatedCounter end={24} suffix=\"/7\" />\n                  </div>\n                  <p className=\"text-sm font-medium\">Support Access</p>\n                  <p className=\"text-xs text-muted-foreground\">We're here when you need us</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <div className=\"mt-12 text-center\">\n            <p className=\"text-lg text-muted-foreground mb-6\">\n              Ready to discuss your specific pricing? Schedule a free consultation\n            </p>\n            <Button size=\"lg\" className=\"w-full sm:w-auto\" asChild data-testid=\"button-pricing-consultation\">\n              <a href=\"https://zcal.co/blackleoventures/30min\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Calendar className=\"mr-2 h-5 w-5\" />\n                Book Free Consultation\n              </a>\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-24 md:py-32 bg-card\" id=\"faq\">\n        <div className=\"max-w-4xl mx-auto px-6\">\n          <div className=\"text-center space-y-4 mb-16\">\n            <h2 className=\"text-4xl md:text-5xl font-bold\" data-testid=\"text-faq-headline\">\n              Frequently Asked Questions\n            </h2>\n            <p className=\"text-xl text-muted-foreground\">\n              Everything you need to know about working with Black Leo Ventures\n            </p>\n          </div>\n\n          <Accordion type=\"single\" collapsible className=\"space-y-4\">\n            <AccordionItem value=\"item-1\" className=\"border rounded-lg px-6\" data-testid=\"accordion-item-1\">\n              <AccordionTrigger className=\"text-lg font-semibold hover:no-underline\">\n                What if my startup is pre-revenue?\n              </AccordionTrigger>\n              <AccordionContent className=\"text-base text-muted-foreground\">\n                We work with startups at all stages, including pre-revenue. Our team specializes in helping early-stage founders articulate their vision, build compelling financial projections, and connect with investors who focus on seed and pre-seed opportunities. We'll help you showcase your market potential, team strength, and traction metrics that matter most to early-stage investors.\n              </AccordionContent>\n            </AccordionItem>\n\n            <AccordionItem value=\"item-2\" className=\"border rounded-lg px-6\" data-testid=\"accordion-item-2\">\n              <AccordionTrigger className=\"text-lg font-semibold hover:no-underline\">\n                How many investor introductions will I actually get?\n              </AccordionTrigger>\n              <AccordionContent className=\"text-base text-muted-foreground\">\n                Quality over quantity is our approach. Rather than sending your deck to hundreds of investors, we typically provide 5-10 highly targeted, warm introductions to investors who are actively seeking opportunities in your sector and stage. These are curated connections based on our proprietary matching algorithm and personal relationships, significantly increasing your chances of meaningful conversations and term sheets.\n              </AccordionContent>\n            </AccordionItem>\n\n            <AccordionItem value=\"item-3\" className=\"border rounded-lg px-6\" data-testid=\"accordion-item-3\">\n              <AccordionTrigger className=\"text-lg font-semibold hover:no-underline\">\n                What's your fee structure?\n              </AccordionTrigger>\n              <AccordionContent className=\"text-base text-muted-foreground\">\n                We believe in complete transparency. Our fee structure typically includes a modest upfront consulting fee for the pitch deck audit and strategy work, plus a success fee based on the funding secured. We align our incentives with your success - we only win when you win. Detailed pricing is provided during the initial consultation based on your specific needs and fundraising goals. No hidden fees, ever.\n              </AccordionContent>\n            </AccordionItem>\n\n            <AccordionItem value=\"item-4\" className=\"border rounded-lg px-6\" data-testid=\"accordion-item-4\">\n              <AccordionTrigger className=\"text-lg font-semibold hover:no-underline\">\n                How do you protect my intellectual property and confidential information?\n              </AccordionTrigger>\n              <AccordionContent className=\"text-base text-muted-foreground\">\n                Your IP and confidential information are sacred to us. We sign comprehensive NDAs with all clients before any information exchange. All investor introductions are made only with your explicit approval, and we never share your materials without your consent. Our team operates under strict confidentiality protocols, and we have robust systems in place to ensure your data security and privacy throughout the entire engagement.\n              </AccordionContent>\n            </AccordionItem>\n\n            <AccordionItem value=\"item-5\" className=\"border rounded-lg px-6\" data-testid=\"accordion-item-5\">\n              <AccordionTrigger className=\"text-lg font-semibold hover:no-underline\">\n                Do you guarantee funding success?\n              </AccordionTrigger>\n              <AccordionContent className=\"text-base text-muted-foreground\">\n                While we cannot guarantee funding (no ethical advisor can), we have a strong track record with qualified startups that complete our full program. We conduct a thorough assessment during the audit phase to ensure your startup is truly ready for fundraising. If we identify gaps, we'll work with you to address them before approaching investors. Our comprehensive approach and curated network significantly improve your chances of securing the right investment partners.\n              </AccordionContent>\n            </AccordionItem>\n\n            <AccordionItem value=\"item-6\" className=\"border rounded-lg px-6\" data-testid=\"accordion-item-6\">\n              <AccordionTrigger className=\"text-lg font-semibold hover:no-underline\">\n                What happens after I secure funding?\n              </AccordionTrigger>\n              <AccordionContent className=\"text-base text-muted-foreground\">\n                Our relationship doesn't end at funding. We provide ongoing support through our 360° ecosystem, including connections to tech partners, marketing agencies, and operational consultants. Many of our clients return for subsequent funding rounds, and we're always here to provide strategic guidance as your startup scales. We're invested in your long-term success, not just the initial funding round.\n              </AccordionContent>\n            </AccordionItem>\n          </Accordion>\n        </div>\n      </section>\n\n      {/* Motivational Facts Section */}\n      <ScrollReveal>\n        <section className=\"py-16 md:py-24 bg-muted/30\">\n          <div className=\"max-w-4xl mx-auto px-6\">\n            <div className=\"text-center space-y-4 mb-12\">\n              <h2 className=\"text-3xl md:text-4xl font-bold\">\n                Inspiring <span className=\"text-primary\">Facts</span> for Indian Entrepreneurs\n              </h2>\n              <p className=\"text-lg text-muted-foreground\">\n                You're building the future of India's economy\n              </p>\n            </div>\n            <MotivationalFacts />\n          </div>\n        </section>\n      </ScrollReveal>\n\n      {/* Final CTA Section */}\n      <section className=\"py-24 md:py-32 bg-gradient-to-br from-primary to-primary/80 text-primary-foreground\" id=\"contact\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <div className=\"space-y-8\">\n            <div className=\"space-y-4\">\n              <h2 className=\"text-4xl md:text-5xl font-bold\" style={{ textShadow: \"0 2px 4px rgba(0,0,0,0.3)\" }} data-testid=\"text-cta-headline\">\n                Ready to Start Your Funding Journey?\n              </h2>\n              <p className=\"text-xl md:text-2xl opacity-90\">\n                Let's discuss how we can help your startup succeed\n              </p>\n              <p className=\"text-lg opacity-75\">\n                Schedule a consultation to explore how Black Leo Ventures can support your fundraising goals\n              </p>\n            </div>\n\n            <div className=\"flex flex-col sm:flex-row flex-wrap md:flex-nowrap gap-3 md:gap-4 justify-center\">\n              <Button\n                size=\"lg\"\n                variant=\"secondary\"\n                className=\"text-lg w-full sm:w-auto\"\n                asChild\n                data-testid=\"button-cta-apply\"\n              >\n                <a href=\"https://wa.me/917837059633?text=Hi%2C%20I%27m%20interested%20in%20a%20Pitch%20Deck%20Audit%20for%20my%20startup.%20Please%20share%20more%20details.\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <MessageCircle className=\"mr-2 h-5 w-5\" />\n                  Apply for Pitch Deck Audit\n                </a>\n              </Button>\n              <Button\n                size=\"lg\"\n                variant=\"secondary\"\n                className=\"text-lg w-full sm:w-auto\"\n                asChild\n                data-testid=\"button-cta-schedule\"\n              >\n                <a href=\"https://zcal.co/blackleoventures/30min\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <Calendar className=\"mr-2 h-5 w-5\" />\n                  Schedule a Free Consultation\n                </a>\n              </Button>\n            </div>\n\n            <div className=\"pt-8\">\n              <div className=\"flex flex-wrap items-center justify-center gap-8 text-center\">\n                <div className=\"space-y-2\">\n                  <div className=\"text-2xl font-bold\" data-testid=\"text-stat-success\">Comprehensive</div>\n                  <div className=\"text-sm opacity-75\">End-to-End Support</div>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"text-2xl font-bold\" data-testid=\"text-stat-startups\">Curated</div>\n                  <div className=\"text-sm opacity-75\">Investor Network</div>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"text-2xl font-bold\" data-testid=\"text-stat-capital\">Transparent</div>\n                  <div className=\"text-sm opacity-75\">Pricing & Process</div>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"text-2xl font-bold\" data-testid=\"text-stat-time\">Expert</div>\n                  <div className=\"text-sm opacity-75\">Guidance Team</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"py-16 bg-card border-t\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid md:grid-cols-4 gap-12 mb-12\">\n            <div className=\"space-y-4\">\n              <img src={logoUrl} alt=\"Black Leo Ventures\" className=\"h-10 w-auto\" data-testid=\"img-footer-logo\" />\n              <p className=\"text-sm text-muted-foreground\">\n                Your startup growth partner - From idea to scale\n              </p>\n              <div className=\"pt-4\">\n                <Button \n                  asChild\n                  className=\"w-full md:w-auto\"\n                  data-testid=\"button-footer-consultation\"\n                >\n                  <a href=\"https://wa.me/917837059633?text=Hi%2C%20I%27m%20interested%20in%20booking%20a%20consultation%20with%20Black%20Leo%20Ventures.%20Please%20share%20more%20details.\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <MessageCircle className=\"mr-2 h-4 w-4\" />\n                    Book a Consultation\n                  </a>\n                </Button>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"font-semibold mb-4\" data-testid=\"text-footer-services\">Services</h3>\n              <ul className=\"space-y-2 text-sm text-muted-foreground\">\n                <li><a href=\"#services\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-footer-funds\">Funds for Startups</a></li>\n                <li><a href=\"#services\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-footer-grants\">Grants & Incubation</a></li>\n                <li><a href=\"#services\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-footer-deals\">Deal Origination</a></li>\n                <li><a href=\"#services\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-footer-ma\">M&A Advisory</a></li>\n              </ul>\n            </div>\n\n            <div>\n              <h3 className=\"font-semibold mb-4\" data-testid=\"text-footer-company\">Company</h3>\n              <ul className=\"space-y-2 text-sm text-muted-foreground\">\n                <li><a href=\"#case-studies\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-footer-cases\">Case Studies</a></li>\n                <li><a href=\"#process\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-footer-process\">Our Process</a></li>\n                <li><a href=\"#faq\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-footer-faq\">FAQ</a></li>\n                <li><a href=\"/tools\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-footer-tools\">AI Tools</a></li>\n                <li><a href=\"#contact\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-footer-contact\">Contact</a></li>\n              </ul>\n            </div>\n\n            <div>\n              <h3 className=\"font-semibold mb-4\" data-testid=\"text-footer-contact-info\">Contact Information</h3>\n              <ul className=\"space-y-3 text-sm text-muted-foreground\">\n                <li className=\"flex items-start gap-2\">\n                  <Phone className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <a href=\"tel:+917837059633\" className=\"font-medium text-foreground hover:text-primary transition-colors\">\n                    +91 78370 59633\n                  </a>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <Building className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <div>\n                    <div className=\"font-medium text-foreground\">CIN</div>\n                    <span className=\"text-xs\">U85300MP2020PTC053751</span>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"pt-8 border-t\">\n            <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n              <div className=\"flex flex-wrap items-center gap-4 text-sm text-muted-foreground\">\n                <Badge variant=\"outline\" data-testid=\"badge-registered\">\n                  <Building className=\"w-3 h-3 mr-1\" />\n                  Registered Company\n                </Badge>\n                <Badge variant=\"outline\" data-testid=\"badge-gstin\">\n                  <FileCheck className=\"w-3 h-3 mr-1\" />\n                  GSTIN Verified\n                </Badge>\n                <Badge variant=\"outline\" data-testid=\"badge-cin\">\n                  <FileCheck className=\"w-3 h-3 mr-1\" />\n                  CIN: U85300MP2020PTC053751\n                </Badge>\n              </div>\n              <p className=\"text-sm text-muted-foreground\" data-testid=\"text-copyright\">\n                © 2025 Black Leo Ventures. All rights reserved.\n              </p>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":70635},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages\n[x] 2. Fix tsx execution issue\n[x] 3. Restart the workflow to see if the project is working\n[x] 4. Verify the project is working\n[x] 5. Inform user the import is completed and mark as completed\n[x] 6. Update color scheme from orange to yellow (#FFD700)\n[x] 7. Create ColorThemeSwitcher component with eye button\n[x] 8. Add 5th service - Pitch Deck Analysis & Improvement\n[x] 9. Add timeline disclaimer to 4-Step Funding System\n[x] 10. Make logos clickable to home page\n[x] 11. Update hero \"Your Growth Partner\" box with animation\n[x] 12. Add BHAWNA CHOURASIYA as third director","size_bytes":614},"client/src/components/color-theme-switcher.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Eye, EyeOff } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport { Card } from \"@/components/ui/card\";\n\ntype ColorTheme = \"yellow\" | \"violet\" | \"red\";\n\nexport function ColorThemeSwitcher() {\n  const [visible, setVisible] = useState(true);\n  const [currentTheme, setCurrentTheme] = useState<ColorTheme>(\"yellow\");\n  const [showIntro, setShowIntro] = useState(true);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(\"color-theme\") as ColorTheme;\n    if (savedTheme) {\n      setCurrentTheme(savedTheme);\n      applyTheme(savedTheme);\n    }\n    \n    const introTimer = setTimeout(() => {\n      setShowIntro(false);\n    }, 5000);\n\n    return () => clearTimeout(introTimer);\n  }, []);\n\n  const applyTheme = (theme: ColorTheme) => {\n    const root = document.documentElement;\n    \n    switch (theme) {\n      case \"yellow\":\n        root.style.setProperty(\"--primary\", \"51 100% 50%\");\n        root.style.setProperty(\"--primary-foreground\", \"0 0% 10%\");\n        root.style.setProperty(\"--sidebar-primary\", \"51 100% 50%\");\n        root.style.setProperty(\"--sidebar-primary-foreground\", \"0 0% 10%\");\n        root.style.setProperty(\"--ring\", \"51 100% 50%\");\n        break;\n      case \"violet\":\n        root.style.setProperty(\"--primary\", \"271 76% 53%\");\n        root.style.setProperty(\"--primary-foreground\", \"0 0% 98%\");\n        root.style.setProperty(\"--sidebar-primary\", \"271 76% 53%\");\n        root.style.setProperty(\"--sidebar-primary-foreground\", \"0 0% 98%\");\n        root.style.setProperty(\"--ring\", \"271 76% 53%\");\n        break;\n      case \"red\":\n        root.style.setProperty(\"--primary\", \"16 100% 50%\");\n        root.style.setProperty(\"--primary-foreground\", \"0 0% 98%\");\n        root.style.setProperty(\"--sidebar-primary\", \"16 100% 50%\");\n        root.style.setProperty(\"--sidebar-primary-foreground\", \"0 0% 98%\");\n        root.style.setProperty(\"--ring\", \"16 100% 50%\");\n        break;\n    }\n    \n    setCurrentTheme(theme);\n    localStorage.setItem(\"color-theme\", theme);\n  };\n\n  const themes: Array<{ name: ColorTheme; label: string; color: string }> = [\n    { name: \"yellow\", label: \"Yellow (Primary)\", color: \"bg-[#FFD700]\" },\n    { name: \"violet\", label: \"Violet\", color: \"bg-[#8A2BE2]\" },\n    { name: \"red\", label: \"Red\", color: \"bg-[#FF4500]\" },\n  ];\n\n  return (\n    <>\n      {visible && (\n        <div className=\"fixed left-4 bottom-28 z-40\">\n          <Sheet>\n            <SheetTrigger asChild>\n              <Button\n                size=\"icon\"\n                variant=\"default\"\n                className=\"h-14 w-14 rounded-full shadow-xl hover-elevate border-2 border-background\"\n                data-testid=\"button-color-theme-toggle\"\n              >\n                <Eye className=\"h-6 w-6\" />\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"left\" className=\"w-80\">\n              <SheetHeader>\n                <SheetTitle>Color Theme</SheetTitle>\n              </SheetHeader>\n              <div className=\"mt-6 space-y-4\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Choose a color theme for the website\n                </p>\n                {themes.map((theme) => (\n                  <Card\n                    key={theme.name}\n                    className={`p-4 cursor-pointer transition-all hover-elevate ${\n                      currentTheme === theme.name\n                        ? \"border-2 border-primary\"\n                        : \"border\"\n                    }`}\n                    onClick={() => applyTheme(theme.name)}\n                    data-testid={`card-theme-${theme.name}`}\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <div className={`w-8 h-8 rounded-full ${theme.color} border-2 border-border`} />\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium\">{theme.label}</div>\n                        {currentTheme === theme.name && (\n                          <div className=\"text-xs text-primary font-medium\">Active</div>\n                        )}\n                      </div>\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            </SheetContent>\n          </Sheet>\n        </div>\n      )}\n      \n      <button\n        onClick={() => setVisible(!visible)}\n        className=\"fixed left-0 bottom-6 bg-primary text-primary-foreground px-3 py-5 rounded-r-lg shadow-xl hover-elevate z-50 transition-all flex items-center gap-2 group\"\n        data-testid=\"button-toggle-color-switcher\"\n      >\n        {visible ? <EyeOff className=\"h-6 w-6\" /> : <Eye className=\"h-6 w-6\" />}\n        <span className=\"text-sm font-semibold whitespace-nowrap pr-2\">\n          {visible ? \"Hide\" : \"Colors\"}\n        </span>\n      </button>\n    </>\n  );\n}\n","size_bytes":4995},"api/equity-calculator.ts":{"content":"import type { VercelRequest, VercelResponse } from '@vercel/node';\nimport { equityCalculationRequestSchema } from \"./schemas\";\n\nexport default async function handler(req: VercelRequest, res: VercelResponse) {\n  // Set CORS headers\n  res.setHeader('Access-Control-Allow-Credentials', 'true');\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,PATCH,DELETE,POST,PUT');\n  res.setHeader('Access-Control-Allow-Headers', 'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version');\n\n  // Handle preflight requests\n  if (req.method === 'OPTIONS') {\n    return res.status(200).end();\n  }\n\n  // Only allow POST requests\n  if (req.method !== 'POST') {\n    return res.status(405).json({\n      success: false,\n      error: 'Method not allowed'\n    });\n  }\n\n  try {\n    // Parse request body\n    const body = typeof req.body === 'string' ? JSON.parse(req.body) : req.body;\n\n    // Validate input\n    const { currentOwnership, fundraisingAmount, preMoneyValuation } = equityCalculationRequestSchema.parse(body);\n\n    // Basic validation\n    if (preMoneyValuation <= 0) {\n      return res.status(400).json({\n        success: false,\n        error: \"Pre-money valuation must be greater than 0\"\n      });\n    }\n\n    if (currentOwnership <= 0 || currentOwnership > 100) {\n      return res.status(400).json({\n        success: false,\n        error: \"Current ownership must be between 0 and 100\"\n      });\n    }\n\n    if (fundraisingAmount <= 0) {\n      return res.status(400).json({\n        success: false,\n        error: \"Fundraising amount must be greater than 0\"\n      });\n    }\n\n    // Safe calculations\n    const postMoneyValuation = Number(preMoneyValuation) + Number(fundraisingAmount);\n    const newInvestorOwnership = (Number(fundraisingAmount) / postMoneyValuation) * 100;\n    const founderOwnershipAfter = Number(currentOwnership) * (1 - newInvestorOwnership / 100);\n    const dilutionPercentage = Number(currentOwnership) - founderOwnershipAfter;\n    const sharePrice = preMoneyValuation / 10000000; // 10M shares base\n\n    // Return calculated results\n    return res.status(200).json({\n      success: true,\n      result: {\n        preMoneyValuation: Number(preMoneyValuation.toFixed(2)),\n        postMoneyValuation: Number(postMoneyValuation.toFixed(2)),\n        newInvestorOwnership: Number(newInvestorOwnership.toFixed(2)),\n        founderOwnershipAfter: Number(founderOwnershipAfter.toFixed(2)),\n        fundraisingAmount: Number(fundraisingAmount.toFixed(2)),\n        sharePrice: Number(sharePrice.toFixed(4)),\n        dilutionPercentage: Number(dilutionPercentage.toFixed(2))\n      }\n    });\n  } catch (error: any) {\n    console.error(\"Equity calculation error:\", error);\n\n    // Handle specific error types\n    if (error.name === 'SyntaxError') {\n      return res.status(400).json({\n        success: false,\n        error: \"Invalid JSON format\"\n      });\n    }\n\n    if (error.name === 'ZodError') {\n      return res.status(400).json({\n        success: false,\n        error: \"Invalid input: currentOwnership (0-100), fundraisingAmount (>0), preMoneyValuation (>0)\"\n      });\n    }\n\n    // Generic error response\n    return res.status(500).json({\n      success: false,\n      error: \"Failed to calculate equity dilution\"\n    });\n  }\n}\n","size_bytes":3354},"api/pitch-practice.ts":{"content":"import type { VercelRequest, VercelResponse } from '@vercel/node';\nimport { GoogleGenAI } from \"@google/genai\";\nimport { pitchPracticeRequestSchema, type PitchPracticeMessage } from \"./schemas\";\n\nasync function generateInvestorResponse(\n  userMessage: string,\n  conversationHistory: PitchPracticeMessage[] = []\n): Promise<string> {\n  if (!process.env.GOOGLE_API_KEY) {\n    throw new Error(\"GOOGLE_API_KEY environment variable is not set\");\n  }\n\n  try {\n    const ai = new GoogleGenAI({ apiKey: process.env.GOOGLE_API_KEY });\n    \n    const systemPrompt = `You are a seasoned venture capital investor with 15+ years of experience evaluating startups. \nYou are direct, analytical, and ask tough but fair questions. You focus on:\n- Market size and opportunity\n- Business model viability and unit economics\n- Competitive advantages and moats\n- Team capabilities and execution track record\n- Traction, metrics, and growth potential\n- Capital efficiency and burn rate\n\nYou speak like a real investor - professional but conversational. You challenge assumptions, \nprobe for weaknesses, and ask for specific numbers and evidence. You're skeptical but open-minded.\nWhen you see potential, you encourage it. When you see red flags, you point them out directly.\n\nKeep responses concise (2-4 sentences) and always end with a specific follow-up question.`;\n\n    // Build conversation history for context\n    const contents = [\n      { role: \"user\", parts: [{ text: systemPrompt }] },\n      ...conversationHistory.map(msg => ({\n        role: msg.role === 'user' ? 'user' as const : 'model' as const,\n        parts: [{ text: msg.content }]\n      })),\n      { role: \"user\", parts: [{ text: userMessage }] }\n    ];\n\n    const response = await ai.models.generateContent({\n      model: \"gemini-2.0-flash\",\n      contents: contents,\n    });\n\n    // Extract text from response - response.text is a property, not a method\n    const text = response.text;\n    \n    if (!text || typeof text !== 'string') {\n      console.error(\"Invalid response from Gemini:\", response);\n      return \"I'm listening. What else can you tell me about your startup?\";\n    }\n\n    return text;\n  } catch (error: any) {\n    console.error(\"AI generation error:\", error);\n    throw new Error(\n      error.message || \"Failed to generate response\"\n    );\n  }\n}\n\nexport default async function handler(req: VercelRequest, res: VercelResponse) {\n  // Set CORS headers\n  res.setHeader('Access-Control-Allow-Credentials', 'true');\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,PATCH,DELETE,POST,PUT');\n  res.setHeader('Access-Control-Allow-Headers', 'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version');\n\n  if (req.method === 'OPTIONS') {\n    return res.status(200).end();\n  }\n\n  if (req.method !== 'POST') {\n    return res.status(405).json({ \n      success: false, \n      error: 'Method not allowed' \n    });\n  }\n\n  try {\n    const validated = pitchPracticeRequestSchema.parse(req.body);\n    \n    const response = await generateInvestorResponse(\n      validated.message,\n      validated.conversationHistory\n    );\n\n    return res.status(200).json({ \n      success: true, \n      response \n    });\n  } catch (error: any) {\n    console.error(\"Request handling error:\", error);\n    \n    if (error.name === 'ZodError') {\n      return res.status(400).json({ \n        success: false, \n        error: \"Invalid request format\" \n      });\n    }\n    \n    return res.status(500).json({ \n      success: false, \n      error: error.message || \"Internal server error\" \n    });\n  }\n}","size_bytes":3647},"server/gemini.ts":{"content":"import { GoogleGenAI } from \"@google/genai\";\nimport type { PitchPracticeMessage } from \"@shared/schema\";\n\n// Using GOOGLE_API_KEY from environment\nif (!process.env.GOOGLE_API_KEY) {\n  throw new Error(\"GOOGLE_API_KEY environment variable is not set. Please configure your API key.\");\n}\n\nconst ai = new GoogleGenAI({ apiKey: process.env.GOOGLE_API_KEY });\n\nexport async function generateInvestorResponse(\n  userMessage: string,\n  conversationHistory: PitchPracticeMessage[] = []\n): Promise<string> {\n  try {\n    const systemPrompt = `You are a seasoned venture capital investor with 15+ years of experience evaluating startups. \nYou are direct, analytical, and ask tough but fair questions. You focus on:\n- Market size and opportunity\n- Business model viability and unit economics\n- Competitive advantages and moats\n- Team capabilities and execution track record\n- Traction, metrics, and growth potential\n- Capital efficiency and burn rate\n\nYou speak like a real investor - professional but conversational. You challenge assumptions, \nprobe for weaknesses, and ask for specific numbers and evidence. You're skeptical but open-minded.\nWhen you see potential, you encourage it. When you see red flags, you point them out directly.\n\nKeep responses concise (2-4 sentences) and always end with a specific follow-up question.`;\n\n    // Build conversation history for context\n    const contents = [\n      { role: \"user\", parts: [{ text: systemPrompt }] },\n      ...conversationHistory.map(msg => ({\n        role: msg.role === 'user' ? 'user' as const : 'model' as const,\n        parts: [{ text: msg.content }]\n      })),\n      { role: \"user\", parts: [{ text: userMessage }] }\n    ];\n\n    const response = await ai.models.generateContent({\n      model: \"gemini-2.0-flash\",\n      contents: contents,\n    });\n\n    // Extract text from response - response.text is a property, not a method\n    const text = response.text;\n    \n    if (!text || typeof text !== 'string') {\n      console.error(\"Invalid response from Gemini:\", response);\n      return \"I'm listening. What else can you tell me about your startup?\";\n    }\n\n    return text;\n  } catch (error) {\n    console.error(\"Gemini API error:\", error);\n    throw new Error(`Failed to generate investor response: ${error}`);\n  }\n}\n\nexport function calculateEquityDilution(\n  currentOwnership: number,\n  fundraisingAmount: number,\n  preMoneyValuation: number\n) {\n  const postMoneyValuation = preMoneyValuation + fundraisingAmount;\n  const newInvestorOwnership = (fundraisingAmount / postMoneyValuation) * 100;\n  const founderOwnershipAfter = currentOwnership * (1 - newInvestorOwnership / 100);\n  const dilutionPercentage = currentOwnership - founderOwnershipAfter;\n  \n  // Calculate implied share price (assuming 10M shares outstanding for simplicity)\n  const totalShares = 10000000;\n  const sharePrice = preMoneyValuation / totalShares;\n\n  return {\n    preMoneyValuation,\n    postMoneyValuation,\n    newInvestorOwnership: parseFloat(newInvestorOwnership.toFixed(2)),\n    founderOwnershipAfter: parseFloat(founderOwnershipAfter.toFixed(2)),\n    fundraisingAmount,\n    sharePrice: parseFloat(sharePrice.toFixed(4)),\n    dilutionPercentage: parseFloat(dilutionPercentage.toFixed(2)),\n  };\n}\n","size_bytes":3225},"client/src/components/equity-dilution-calculator.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Calculator, TrendingDown } from \"lucide-react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { EquityCalculationResult } from \"@shared/schema\";\n\nexport function EquityDilutionCalculator() {\n  const [currentOwnership, setCurrentOwnership] = useState<string>(\"100\");\n  const [fundraisingAmount, setFundraisingAmount] = useState<string>(\"\");\n  const [preMoneyValuation, setPreMoneyValuation] = useState<string>(\"\");\n  const [result, setResult] = useState<EquityCalculationResult | null>(null);\n  const { toast } = useToast();\n\n  const calculateMutation = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest(\"POST\", \"/api/equity-calculator\", {\n        currentOwnership: parseFloat(currentOwnership),\n        fundraisingAmount: parseFloat(fundraisingAmount),\n        preMoneyValuation: parseFloat(preMoneyValuation),\n      });\n      \n      // Check response.ok BEFORE parsing JSON\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ error: \"Failed to calculate equity dilution\" })) as { error?: string };\n        throw new Error(errorData.error || \"Failed to calculate equity dilution\");\n      }\n      \n      const data = await response.json() as { success: boolean; result: EquityCalculationResult };\n      return data;\n    },\n    onSuccess: (data) => {\n      setResult(data.result);\n    },\n    onError: (error: Error) => {\n      toast({\n        variant: \"destructive\",\n        title: \"Calculation Error\",\n        description: error.message || \"Failed to calculate equity dilution. Please check your inputs.\",\n      });\n    },\n  });\n\n  const handleCalculate = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (currentOwnership && fundraisingAmount && preMoneyValuation) {\n      calculateMutation.mutate();\n    }\n  };\n\n  const formatCurrency = (value: number, showDecimals: boolean = false) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: showDecimals ? 2 : 0,\n      maximumFractionDigits: showDecimals ? 2 : 0,\n    }).format(value);\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"text-primary\">Equity Dilution & Cap Table Simulator</CardTitle>\n        <CardDescription>\n          Calculate how your ownership changes after fundraising rounds\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <form onSubmit={handleCalculate} className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"current-ownership\">Current Ownership (%)</Label>\n            <Input\n              id=\"current-ownership\"\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              step=\"0.01\"\n              value={currentOwnership}\n              onChange={(e) => setCurrentOwnership(e.target.value)}\n              placeholder=\"100\"\n              data-testid=\"input-current-ownership\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"fundraising-amount\">Fundraising Amount (₹)</Label>\n            <Input\n              id=\"fundraising-amount\"\n              type=\"number\"\n              min=\"0\"\n              step=\"100000\"\n              value={fundraisingAmount}\n              onChange={(e) => setFundraisingAmount(e.target.value)}\n              placeholder=\"5000000\"\n              data-testid=\"input-fundraising-amount\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"pre-money-valuation\">Pre-Money Valuation (₹)</Label>\n            <Input\n              id=\"pre-money-valuation\"\n              type=\"number\"\n              min=\"0\"\n              step=\"100000\"\n              value={preMoneyValuation}\n              onChange={(e) => setPreMoneyValuation(e.target.value)}\n              placeholder=\"20000000\"\n              data-testid=\"input-pre-money-valuation\"\n            />\n          </div>\n\n          <Button\n            type=\"submit\"\n            className=\"w-full\"\n            disabled={!currentOwnership || !fundraisingAmount || !preMoneyValuation || calculateMutation.isPending}\n            data-testid=\"button-calculate-equity\"\n          >\n            <Calculator className=\"mr-2 h-4 w-4\" />\n            Calculate Dilution\n          </Button>\n        </form>\n\n        {result && (\n          <div className=\"space-y-4 pt-4 border-t\">\n            <h3 className=\"font-semibold text-lg flex items-center gap-2\">\n              <TrendingDown className=\"h-5 w-5 text-primary\" />\n              Results\n            </h3>\n            \n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">Pre-Money Valuation</p>\n                <p className=\"text-lg font-semibold\" data-testid=\"text-pre-money\">\n                  {formatCurrency(result.preMoneyValuation)}\n                </p>\n              </div>\n              \n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">Post-Money Valuation</p>\n                <p className=\"text-lg font-semibold\" data-testid=\"text-post-money\">\n                  {formatCurrency(result.postMoneyValuation)}\n                </p>\n              </div>\n\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">Your Ownership (After)</p>\n                <p className=\"text-lg font-semibold text-primary\" data-testid=\"text-founder-ownership\">\n                  {result.founderOwnershipAfter}%\n                </p>\n              </div>\n\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">Investor Ownership</p>\n                <p className=\"text-lg font-semibold\" data-testid=\"text-investor-ownership\">\n                  {result.newInvestorOwnership}%\n                </p>\n              </div>\n\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">Dilution</p>\n                <p className=\"text-lg font-semibold text-red-500\" data-testid=\"text-dilution\">\n                  -{result.dilutionPercentage}%\n                </p>\n              </div>\n\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">Share Price</p>\n                <p className=\"text-lg font-semibold\" data-testid=\"text-share-price\">\n                  {formatCurrency(result.sharePrice, true)}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":7031},"client/src/components/motivational-facts.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Quote, TrendingUp, Lightbulb, Target } from \"lucide-react\";\n\nconst motivationalFacts = [\n  {\n    icon: TrendingUp,\n    quote: \"India is home to the 3rd largest startup ecosystem in the world with 100+ unicorns and counting.\",\n    author: \"NASSCOM Report 2024\",\n    color: \"text-primary\"\n  },\n  {\n    icon: Lightbulb,\n    quote: \"Indian startups raised $24 billion in funding in 2023, proving that great ideas find capital.\",\n    author: \"Inc42 India Startup Funding Report\",\n    color: \"text-primary\"\n  },\n  {\n    icon: Target,\n    quote: \"Over 60% of Indian unicorns achieved their status within 7 years of founding. Your time is now.\",\n    author: \"Hurun India Future Unicorn Index\",\n    color: \"text-primary\"\n  },\n  {\n    icon: Quote,\n    quote: \"The best time to build a startup is when you have a problem worth solving. The second best time is now.\",\n    author: \"Wisdom for Indian Entrepreneurs\",\n    color: \"text-primary\"\n  },\n  {\n    icon: TrendingUp,\n    quote: \"Indian B2B SaaS companies are growing at 30% CAGR, creating global impact from India.\",\n    author: \"SaaSBoomi & McKinsey Report\",\n    color: \"text-primary\"\n  },\n  {\n    icon: Lightbulb,\n    quote: \"Tier 2 and Tier 3 cities contribute 45% of India's startup growth. Innovation has no geography.\",\n    author: \"Startup India Initiative\",\n    color: \"text-primary\"\n  }\n];\n\nexport function MotivationalFacts() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentIndex((prev) => (prev + 1) % motivationalFacts.length);\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const current = motivationalFacts[currentIndex];\n  const Icon = current.icon;\n\n  return (\n    <Card className=\"bg-gradient-to-br from-primary/5 to-primary/10 border-primary/20 overflow-hidden\">\n      <CardContent className=\"p-8 md:p-12\">\n        <div className=\"relative\">\n          <div className=\"flex items-start gap-6\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-14 h-14 rounded-full bg-primary/10 flex items-center justify-center\">\n                <Icon className={`w-7 h-7 ${current.color}`} />\n              </div>\n            </div>\n            <div className=\"flex-1 space-y-4\">\n              <div className=\"relative min-h-[120px]\">\n                {motivationalFacts.map((fact, index) => (\n                  <div\n                    key={index}\n                    className={`absolute inset-0 transition-all duration-700 ${\n                      index === currentIndex\n                        ? \"opacity-100 translate-y-0\"\n                        : \"opacity-0 translate-y-4 pointer-events-none\"\n                    }`}\n                    data-testid={`fact-${index}`}\n                  >\n                    <blockquote className=\"text-lg md:text-xl font-medium leading-relaxed\">\n                      \"{fact.quote}\"\n                    </blockquote>\n                    <footer className=\"mt-4 text-sm text-muted-foreground font-medium\">\n                      — {fact.author}\n                    </footer>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"flex gap-2 pt-4\">\n                {motivationalFacts.map((_, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setCurrentIndex(index)}\n                    className={`h-1.5 rounded-full transition-all duration-300 ${\n                      index === currentIndex\n                        ? \"w-8 bg-primary\"\n                        : \"w-1.5 bg-primary/30 hover:bg-primary/50\"\n                    }`}\n                    aria-label={`Go to fact ${index + 1}`}\n                    data-testid={`button-fact-${index}`}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":4025},"client/src/components/pitch-practice-ai.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Loader2, Send, RotateCcw } from \"lucide-react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { PitchPracticeMessage } from \"@shared/schema\";\n\nexport function PitchPracticeAI() {\n  const [message, setMessage] = useState(\"\");\n  const [conversationHistory, setConversationHistory] = useState<PitchPracticeMessage[]>([]);\n  const { toast } = useToast();\n\n  const pitchMutation = useMutation({\n    mutationFn: async (userMessage: string) => {\n      const response = await apiRequest(\"POST\", \"/api/pitch-practice\", {\n        message: userMessage,\n        conversationHistory,\n      });\n      \n      // Check response.ok BEFORE parsing JSON\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ error: \"Failed to generate investor response\" })) as { error?: string };\n        throw new Error(errorData.error || \"Failed to generate investor response\");\n      }\n      \n      const data = await response.json() as { success: boolean; response: string };\n      return data;\n    },\n    onSuccess: (data) => {\n      setConversationHistory(prev => [\n        ...prev,\n        { role: 'user' as const, content: message },\n        { role: 'assistant' as const, content: data.response }\n      ]);\n      setMessage(\"\");\n    },\n    onError: (error: Error) => {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: error.message || \"Failed to get investor response. Please try again.\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (message.trim() && !pitchMutation.isPending) {\n      pitchMutation.mutate(message);\n    }\n  };\n\n  const handleReset = () => {\n    setConversationHistory([]);\n    setMessage(\"\");\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          <span className=\"text-primary\">Pitch Practice AI</span>\n          {conversationHistory.length > 0 && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleReset}\n              data-testid=\"button-reset-pitch\"\n            >\n              <RotateCcw className=\"h-4 w-4 mr-2\" />\n              Reset\n            </Button>\n          )}\n        </CardTitle>\n        <CardDescription>\n          Practice your pitch with an AI investor. Get realistic feedback and tough questions.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <ScrollArea className=\"h-[300px] w-full rounded-md border p-4\">\n          {conversationHistory.length === 0 ? (\n            <div className=\"text-center text-muted-foreground py-12\">\n              <p className=\"text-lg font-medium mb-2\">Ready to pitch?</p>\n              <p className=\"text-sm\">\n                Introduce your startup and I'll ask you questions like a real investor would.\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {conversationHistory.map((msg, idx) => (\n                <div\n                  key={idx}\n                  className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}\n                  data-testid={`message-${msg.role}-${idx}`}\n                >\n                  <div\n                    className={`max-w-[80%] rounded-lg p-3 ${\n                      msg.role === 'user'\n                        ? 'bg-primary text-primary-foreground'\n                        : 'bg-muted'\n                    }`}\n                  >\n                    <p className=\"text-sm whitespace-pre-wrap\">{msg.content}</p>\n                  </div>\n                </div>\n              ))}\n              {pitchMutation.isPending && (\n                <div className=\"flex justify-start\" data-testid=\"message-loading\">\n                  <div className=\"bg-muted rounded-lg p-3\">\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </ScrollArea>\n\n        <form onSubmit={handleSubmit} className=\"flex gap-2\">\n          <Textarea\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Tell me about your startup...\"\n            className=\"resize-none\"\n            rows={3}\n            disabled={pitchMutation.isPending}\n            data-testid=\"input-pitch-message\"\n          />\n          <Button\n            type=\"submit\"\n            size=\"icon\"\n            disabled={!message.trim() || pitchMutation.isPending}\n            data-testid=\"button-send-pitch\"\n          >\n            {pitchMutation.isPending ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <Send className=\"h-4 w-4\" />\n            )}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":5275},"client/src/pages/tools.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { PitchPracticeAI } from \"@/components/pitch-practice-ai\";\nimport { EquityDilutionCalculator } from \"@/components/equity-dilution-calculator\";\nimport { ScrollReveal } from \"@/components/scroll-reveal\";\nimport { ThemeToggle } from \"@/components/theme-toggle\";\nimport { ColorThemeSwitcher } from \"@/components/color-theme-switcher\";\nimport { FloatingWhatsApp } from \"@/components/floating-whatsapp\";\nimport { ArrowLeft, Sparkles } from \"lucide-react\";\nimport logoUrl from \"@assets/logo blackleo_1759773901852.png\";\nimport { useLocation } from \"wouter\";\nimport { useEffect } from \"react\";\n\nexport default function Tools() {\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    document.title = \"Startup AI Tools - Black Leo Ventures | Free Fundraising Tools\";\n    \n    const metaDescription = document.querySelector('meta[name=\"description\"]');\n    if (metaDescription) {\n      metaDescription.setAttribute('content', 'Free AI-powered tools for Indian startups - Practice your pitch with AI investors and calculate equity dilution. Prepare for fundraising with Black Leo Ventures.');\n    }\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <FloatingWhatsApp />\n      <ColorThemeSwitcher />\n\n      <nav className=\"sticky top-0 z-50 border-b bg-background/80 backdrop-blur-md\">\n        <div className=\"max-w-7xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <a href=\"/\" className=\"flex items-center gap-2\" data-testid=\"link-tools-logo\">\n              <img src={logoUrl} alt=\"Black Leo Ventures\" className=\"h-10 w-auto\" data-testid=\"img-tools-logo\" />\n            </a>\n            <div className=\"flex items-center gap-3\">\n              <Button\n                variant=\"ghost\"\n                onClick={() => setLocation(\"/\")}\n                data-testid=\"button-back-home\"\n              >\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                Back to Home\n              </Button>\n              <ThemeToggle />\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <ScrollReveal>\n        <section className=\"py-16 md:py-24\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"text-center space-y-6 mb-16\">\n              <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 text-primary border border-primary/20\">\n                <Sparkles className=\"w-4 h-4\" />\n                <span className=\"text-sm font-medium\">Free AI-Powered Tools</span>\n              </div>\n              \n              <h1 className=\"text-4xl md:text-6xl font-bold\">\n                Startup <span className=\"text-primary\">AI Tools</span>\n              </h1>\n              \n              <p className=\"text-xl md:text-2xl text-muted-foreground max-w-3xl mx-auto\">\n                Prepare for your fundraising journey with our free AI-powered tools designed specifically for Indian startups\n              </p>\n\n              <p className=\"text-base text-muted-foreground max-w-2xl mx-auto\">\n                Practice your pitch with an AI investor simulator and understand equity dilution before you enter fundraising conversations\n              </p>\n            </div>\n\n            <div className=\"grid lg:grid-cols-2 gap-8 max-w-7xl mx-auto\">\n              <PitchPracticeAI />\n              <EquityDilutionCalculator />\n            </div>\n\n            <div className=\"mt-16 text-center\">\n              <div className=\"inline-block p-8 bg-card border rounded-lg\">\n                <h3 className=\"text-2xl font-bold mb-3\">Need Expert Guidance?</h3>\n                <p className=\"text-muted-foreground mb-6 max-w-md\">\n                  While these tools help you prepare, our expert team provides personalized fundraising support\n                </p>\n                <Button\n                  size=\"lg\"\n                  asChild\n                  data-testid=\"button-contact-experts\"\n                >\n                  <a href=\"/\">\n                    Explore Our Services\n                  </a>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </section>\n      </ScrollReveal>\n\n      <footer className=\"py-12 bg-card border-t\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n            <div className=\"flex items-center gap-2\">\n              <img src={logoUrl} alt=\"Black Leo Ventures\" className=\"h-8 w-auto\" />\n              <span className=\"text-sm text-muted-foreground\">Your startup growth partner</span>\n            </div>\n            <p className=\"text-sm text-muted-foreground\">\n              © 2025 Black Leo Ventures. All rights reserved.\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":4869},"api/schemas.ts":{"content":"import { z } from \"zod\";\n\n// Pitch Practice AI schemas\nexport const pitchPracticeMessageSchema = z.object({\n  role: z.enum(['user', 'assistant']),\n  content: z.string(),\n});\n\nexport const pitchPracticeRequestSchema = z.object({\n  message: z.string().min(1, \"Message cannot be empty\"),\n  conversationHistory: z.array(pitchPracticeMessageSchema).optional().default([]),\n});\n\nexport type PitchPracticeMessage = z.infer<typeof pitchPracticeMessageSchema>;\nexport type PitchPracticeRequest = z.infer<typeof pitchPracticeRequestSchema>;\n\n// Equity Dilution Calculator schemas\nexport const equityCalculationRequestSchema = z.object({\n  currentOwnership: z.number().min(0).max(100),\n  fundraisingAmount: z.number().min(0),\n  preMoneyValuation: z.number().min(0),\n});\n\nexport const equityCalculationResultSchema = z.object({\n  preMoneyValuation: z.number(),\n  postMoneyValuation: z.number(),\n  newInvestorOwnership: z.number(),\n  founderOwnershipAfter: z.number(),\n  fundraisingAmount: z.number(),\n  sharePrice: z.number(),\n  dilutionPercentage: z.number(),\n});\n\nexport type EquityCalculationRequest = z.infer<typeof equityCalculationRequestSchema>;\nexport type EquityCalculationResult = z.infer<typeof equityCalculationResultSchema>;\n","size_bytes":1226}},"version":1}